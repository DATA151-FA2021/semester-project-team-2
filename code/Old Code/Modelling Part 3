{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Modelling Part 3","provenance":[{"file_id":"1DgLA4nPQ3aU2iunEseDZAy7F4aJsqsOl","timestamp":1637080870687}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"60ZY5cW7eADh"},"source":["from imblearn.over_sampling import RandomOverSampler, SMOTE\n","from imblearn.under_sampling import RandomUnderSampler\n","import graphviz\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from sklearn.datasets import load_iris\n","from sklearn import metrics\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.tree import DecisionTreeClassifier, export_graphviz"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zUNZafd-ijb7"},"source":["df = pd.read_csv('Numerical_data(No Zero).csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":453},"id":"8su17pDAipwa","executionInfo":{"status":"ok","timestamp":1637091927605,"user_tz":360,"elapsed":256,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"4c7654ec-63e9-4a1f-be30-9e0e6ec55b28"},"source":["df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Unnamed: 0.1</th>\n","      <th>Nr. reviews</th>\n","      <th>Nr. hotel reviews</th>\n","      <th>Helpful votes</th>\n","      <th>Score</th>\n","      <th>Hotel stars</th>\n","      <th>Nr. rooms</th>\n","      <th>Member years</th>\n","      <th>Num Traveler type</th>\n","      <th>Num User country</th>\n","      <th>Num Hotel name</th>\n","      <th>Dummy Pool</th>\n","      <th>Dummy Gym</th>\n","      <th>Dummy Tennis</th>\n","      <th>Dummy Spa</th>\n","      <th>Dummy Casino</th>\n","      <th>Dummy Free Internet</th>\n","      <th>Num Review month</th>\n","      <th>Num User continent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>119</td>\n","      <td>21</td>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>36</td>\n","      <td>9</td>\n","      <td>25</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>499</td>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>500</td>\n","      <td>50</td>\n","      <td>13</td>\n","      <td>29</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>501</td>\n","      <td>501</td>\n","      <td>154</td>\n","      <td>23</td>\n","      <td>31</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>502</td>\n","      <td>502</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>503</td>\n","      <td>503</td>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>112</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows Ã— 20 columns</p>\n","</div>"],"text/plain":["     Unnamed: 0  Unnamed: 0.1  ...  Num Review month  Num User continent\n","0             0             0  ...                 1                   1\n","1             1             1  ...                 1                   1\n","2             2             2  ...                 2                   1\n","3             3             3  ...                 2                   2\n","4             4             4  ...                 3                   1\n","..          ...           ...  ...               ...                 ...\n","499         499           499  ...                10                   2\n","500         500           500  ...                11                   1\n","501         501           501  ...                11                   1\n","502         502           502  ...                12                   1\n","503         503           503  ...                12                   1\n","\n","[504 rows x 20 columns]"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"_w4WZud1iqIl"},"source":["df = df.drop(columns=['Unnamed: 0'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sVnWSyRwi2sa"},"source":["df = df.drop(columns=['Unnamed: 0.1'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":453},"id":"lSwEQVB6i-Zq","executionInfo":{"status":"ok","timestamp":1637091931696,"user_tz":360,"elapsed":140,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"77e09859-761c-4da3-9498-0c3160938ee3"},"source":["df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nr. reviews</th>\n","      <th>Nr. hotel reviews</th>\n","      <th>Helpful votes</th>\n","      <th>Score</th>\n","      <th>Hotel stars</th>\n","      <th>Nr. rooms</th>\n","      <th>Member years</th>\n","      <th>Num Traveler type</th>\n","      <th>Num User country</th>\n","      <th>Num Hotel name</th>\n","      <th>Dummy Pool</th>\n","      <th>Dummy Gym</th>\n","      <th>Dummy Tennis</th>\n","      <th>Dummy Spa</th>\n","      <th>Dummy Casino</th>\n","      <th>Dummy Free Internet</th>\n","      <th>Num Review month</th>\n","      <th>Num User continent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>119</td>\n","      <td>21</td>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>36</td>\n","      <td>9</td>\n","      <td>25</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>50</td>\n","      <td>13</td>\n","      <td>29</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>154</td>\n","      <td>23</td>\n","      <td>31</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>112</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows Ã— 18 columns</p>\n","</div>"],"text/plain":["     Nr. reviews  Nr. hotel reviews  ...  Num Review month  Num User continent\n","0             11                  4  ...                 1                   1\n","1            119                 21  ...                 1                   1\n","2             36                  9  ...                 2                   1\n","3             14                  7  ...                 2                   2\n","4              5                  5  ...                 3                   1\n","..           ...                ...  ...               ...                 ...\n","499           15                  4  ...                10                   2\n","500           50                 13  ...                11                   1\n","501          154                 23  ...                11                   1\n","502            9                  6  ...                12                   1\n","503           20                 19  ...                12                   1\n","\n","[504 rows x 18 columns]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"h0kZN5oni-vN"},"source":["xtrain, xtest, ytrain, ytest = train_test_split(df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']], df['Score'],train_size=0.8)\n","\n","# Initialize our decision tree object\n","classification_tree = DecisionTreeClassifier()\n","\n","# Train our decision tree (tree induction + pruning)\n","classification_tree = classification_tree.fit(xtrain, ytrain)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"-zOFPoOIjlEa","executionInfo":{"status":"ok","timestamp":1637093034524,"user_tz":360,"elapsed":155,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"6bf29951-9429-4961-ebd0-b149b5a02274"},"source":["dot_data = export_graphviz(classification_tree, out_file=None,  \n","                           feature_names = ['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym'],  \n","                           class_names = ['1','2','3','4','5'], \n","                           filled=True, rounded=True,  \n","                           special_characters=True)  \n","graph = graphviz.Source(dot_data)\n","graph\n","\n","#graph.render(\"Model DT\", view=True) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<graphviz.files.Source at 0x7f4fbbc51290>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"719pt\" height=\"790pt\"\n viewBox=\"0.00 0.00 718.50 790.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 786)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-786 714.5,-786 714.5,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#fad9f3\" stroke=\"#000000\" d=\"M444,-782C444,-782 264,-782 264,-782 258,-782 252,-776 252,-770 252,-770 252,-711 252,-711 252,-705 258,-699 264,-699 264,-699 444,-699 444,-699 450,-699 456,-705 456,-711 456,-711 456,-770 456,-770 456,-776 450,-782 444,-782\"/>\n<text text-anchor=\"start\" x=\"297.5\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 4.25</text>\n<text text-anchor=\"start\" x=\"316\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.665</text>\n<text text-anchor=\"start\" x=\"306\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 403</text>\n<text text-anchor=\"start\" x=\"260\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 22, 56, 131, 183]</text>\n<text text-anchor=\"start\" x=\"325\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#f7f7fe\" stroke=\"#000000\" d=\"M333.5,-663C333.5,-663 178.5,-663 178.5,-663 172.5,-663 166.5,-657 166.5,-651 166.5,-651 166.5,-592 166.5,-592 166.5,-586 172.5,-580 178.5,-580 178.5,-580 333.5,-580 333.5,-580 339.5,-580 345.5,-586 345.5,-592 345.5,-592 345.5,-651 345.5,-651 345.5,-657 339.5,-663 333.5,-663\"/>\n<text text-anchor=\"start\" x=\"196.5\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Pool â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"218\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.699</text>\n<text text-anchor=\"start\" x=\"208\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 236</text>\n<text text-anchor=\"start\" x=\"174.5\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 16, 45, 88, 82]</text>\n<text text-anchor=\"start\" x=\"227\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M319.7244,-698.8796C312.3816,-689.9633 304.5524,-680.4565 296.9854,-671.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"299.4808,-668.7924 290.4219,-663.2981 294.0773,-673.2424 299.4808,-668.7924\"/>\n<text text-anchor=\"middle\" x=\"288.0138\" y=\"-684.4818\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<path fill=\"#f3a2e2\" stroke=\"#000000\" d=\"M530.5,-663C530.5,-663 375.5,-663 375.5,-663 369.5,-663 363.5,-657 363.5,-651 363.5,-651 363.5,-592 363.5,-592 363.5,-586 369.5,-580 375.5,-580 375.5,-580 530.5,-580 530.5,-580 536.5,-580 542.5,-586 542.5,-592 542.5,-592 542.5,-651 542.5,-651 542.5,-657 536.5,-663 530.5,-663\"/>\n<text text-anchor=\"start\" x=\"396.5\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 4.75</text>\n<text text-anchor=\"start\" x=\"415\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.561</text>\n<text text-anchor=\"start\" x=\"405\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 167</text>\n<text text-anchor=\"start\" x=\"371.5\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 6, 11, 43, 101]</text>\n<text text-anchor=\"start\" x=\"424\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 0&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>0&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M388.6254,-698.8796C396.118,-689.8733 404.1119,-680.2644 411.8279,-670.9897\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"414.5219,-673.224 418.2268,-663.2981 409.1407,-668.7472 414.5219,-673.224\"/>\n<text text-anchor=\"middle\" x=\"420.5108\" y=\"-684.4935\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<path fill=\"#d1d0f9\" stroke=\"#000000\" d=\"M134,-536.5C134,-536.5 12,-536.5 12,-536.5 6,-536.5 0,-530.5 0,-524.5 0,-524.5 0,-480.5 0,-480.5 0,-474.5 6,-468.5 12,-468.5 12,-468.5 134,-468.5 134,-468.5 140,-468.5 146,-474.5 146,-480.5 146,-480.5 146,-524.5 146,-524.5 146,-530.5 140,-536.5 134,-536.5\"/>\n<text text-anchor=\"start\" x=\"35\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.731</text>\n<text text-anchor=\"start\" x=\"29\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 22</text>\n<text text-anchor=\"start\" x=\"8\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 4, 5, 9, 2]</text>\n<text text-anchor=\"start\" x=\"44\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M191.9955,-579.8796C173.1361,-567.6158 152.5586,-554.2348 133.8998,-542.1015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"135.7664,-539.1404 125.4749,-536.623 131.9503,-545.0088 135.7664,-539.1404\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<path fill=\"#fffeff\" stroke=\"#000000\" d=\"M340,-544C340,-544 176,-544 176,-544 170,-544 164,-538 164,-532 164,-532 164,-473 164,-473 164,-467 170,-461 176,-461 176,-461 340,-461 340,-461 346,-461 352,-467 352,-473 352,-473 352,-532 352,-532 352,-538 346,-544 340,-544\"/>\n<text text-anchor=\"start\" x=\"172\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Free Internet â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"220\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.686</text>\n<text text-anchor=\"start\" x=\"210\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 214</text>\n<text text-anchor=\"start\" x=\"176.5\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 12, 40, 79, 80]</text>\n<text text-anchor=\"start\" x=\"229\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 1&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>1&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M256.6995,-579.8796C256.8372,-571.6838 256.9834,-562.9891 257.126,-554.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"260.6289,-554.3555 257.2975,-544.2981 253.6299,-554.2378 260.6289,-554.3555\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<path fill=\"#d5d5f9\" stroke=\"#000000\" d=\"M231,-417.5C231,-417.5 109,-417.5 109,-417.5 103,-417.5 97,-411.5 97,-405.5 97,-405.5 97,-361.5 97,-361.5 97,-355.5 103,-349.5 109,-349.5 109,-349.5 231,-349.5 231,-349.5 237,-349.5 243,-355.5 243,-361.5 243,-361.5 243,-405.5 243,-405.5 243,-411.5 237,-417.5 231,-417.5\"/>\n<text text-anchor=\"start\" x=\"132\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.715</text>\n<text text-anchor=\"start\" x=\"126\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 19</text>\n<text text-anchor=\"start\" x=\"105\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 5, 3, 8, 2]</text>\n<text text-anchor=\"start\" x=\"141\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M227.2219,-460.8796C218.8464,-449.5536 209.7662,-437.2748 201.3589,-425.9058\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"204.1357,-423.7743 195.3758,-417.8149 198.5075,-427.9364 204.1357,-423.7743\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<path fill=\"#fef4fb\" stroke=\"#000000\" d=\"M420.5,-425C420.5,-425 273.5,-425 273.5,-425 267.5,-425 261.5,-419 261.5,-413 261.5,-413 261.5,-354 261.5,-354 261.5,-348 267.5,-342 273.5,-342 273.5,-342 420.5,-342 420.5,-342 426.5,-342 432.5,-348 432.5,-354 432.5,-354 432.5,-413 432.5,-413 432.5,-419 426.5,-425 420.5,-425\"/>\n<text text-anchor=\"start\" x=\"290.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 3.25</text>\n<text text-anchor=\"start\" x=\"313.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.67</text>\n<text text-anchor=\"start\" x=\"299\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 195</text>\n<text text-anchor=\"start\" x=\"269.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 7, 37, 71, 78]</text>\n<text text-anchor=\"start\" x=\"318\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M289.1279,-460.8796C295.729,-452.0534 302.7629,-442.6485 309.5702,-433.5466\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"312.5528,-435.4024 315.7393,-425.2981 306.9472,-431.2099 312.5528,-435.4024\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<path fill=\"#fceaf8\" stroke=\"#000000\" d=\"M325.5,-306C325.5,-306 178.5,-306 178.5,-306 172.5,-306 166.5,-300 166.5,-294 166.5,-294 166.5,-235 166.5,-235 166.5,-229 172.5,-223 178.5,-223 178.5,-223 325.5,-223 325.5,-223 331.5,-223 337.5,-229 337.5,-235 337.5,-235 337.5,-294 337.5,-294 337.5,-300 331.5,-306 325.5,-306\"/>\n<text text-anchor=\"start\" x=\"194\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Spa â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"214\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.686</text>\n<text text-anchor=\"start\" x=\"208\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 54</text>\n<text text-anchor=\"start\" x=\"174.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 16, 16, 20]</text>\n<text text-anchor=\"start\" x=\"223\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 5&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>5&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M313.7736,-341.8796C306.6556,-332.9633 299.0661,-323.4565 291.7308,-314.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"294.3425,-311.9295 285.3682,-306.2981 288.8719,-316.2968 294.3425,-311.9295\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<path fill=\"#fef8fd\" stroke=\"#000000\" d=\"M514.5,-306C514.5,-306 367.5,-306 367.5,-306 361.5,-306 355.5,-300 355.5,-294 355.5,-294 355.5,-235 355.5,-235 355.5,-229 361.5,-223 367.5,-223 367.5,-223 514.5,-223 514.5,-223 520.5,-223 526.5,-229 526.5,-235 526.5,-235 526.5,-294 526.5,-294 526.5,-300 520.5,-306 514.5,-306\"/>\n<text text-anchor=\"start\" x=\"384.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 3.75</text>\n<text text-anchor=\"start\" x=\"403\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.655</text>\n<text text-anchor=\"start\" x=\"393\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 141</text>\n<text text-anchor=\"start\" x=\"363.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 5, 21, 55, 58]</text>\n<text text-anchor=\"start\" x=\"412\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 5&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>5&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M379.8766,-341.8796C386.9197,-332.9633 394.4293,-323.4565 401.6874,-314.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"404.5309,-316.3147 407.983,-306.2981 399.0379,-311.9757 404.5309,-316.3147\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<path fill=\"#f8ceef\" stroke=\"#000000\" d=\"M137,-179.5C137,-179.5 15,-179.5 15,-179.5 9,-179.5 3,-173.5 3,-167.5 3,-167.5 3,-123.5 3,-123.5 3,-117.5 9,-111.5 15,-111.5 15,-111.5 137,-111.5 137,-111.5 143,-111.5 149,-117.5 149,-123.5 149,-123.5 149,-167.5 149,-167.5 149,-173.5 143,-179.5 137,-179.5\"/>\n<text text-anchor=\"start\" x=\"42.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.68</text>\n<text text-anchor=\"start\" x=\"32\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"start\" x=\"11\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 4, 4, 7]</text>\n<text text-anchor=\"start\" x=\"47\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M190.4437,-222.8796C172.4691,-210.7263 152.8718,-197.4759 135.0558,-185.4297\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"136.7123,-182.3248 126.4677,-179.623 132.7914,-188.1237 136.7123,-182.3248\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<path fill=\"#fef7fd\" stroke=\"#000000\" d=\"M326.5,-179.5C326.5,-179.5 179.5,-179.5 179.5,-179.5 173.5,-179.5 167.5,-173.5 167.5,-167.5 167.5,-167.5 167.5,-123.5 167.5,-123.5 167.5,-117.5 173.5,-111.5 179.5,-111.5 179.5,-111.5 326.5,-111.5 326.5,-111.5 332.5,-111.5 338.5,-117.5 338.5,-123.5 338.5,-123.5 338.5,-167.5 338.5,-167.5 338.5,-173.5 332.5,-179.5 326.5,-179.5\"/>\n<text text-anchor=\"start\" x=\"215\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.683</text>\n<text text-anchor=\"start\" x=\"209\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 38</text>\n<text text-anchor=\"start\" x=\"175.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 12, 12, 13]</text>\n<text text-anchor=\"start\" x=\"224\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 6&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>6&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M252.3498,-222.8796C252.4394,-212.2134 252.5361,-200.7021 252.6269,-189.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"256.1274,-189.844 252.7116,-179.8149 249.1276,-189.7851 256.1274,-189.844\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<path fill=\"#fad7f2\" stroke=\"#000000\" d=\"M509.5,-187C509.5,-187 370.5,-187 370.5,-187 364.5,-187 358.5,-181 358.5,-175 358.5,-175 358.5,-116 358.5,-116 358.5,-110 364.5,-104 370.5,-104 370.5,-104 509.5,-104 509.5,-104 515.5,-104 521.5,-110 521.5,-116 521.5,-116 521.5,-175 521.5,-175 521.5,-181 515.5,-187 509.5,-187\"/>\n<text text-anchor=\"start\" x=\"382\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Spa â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"402\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.602</text>\n<text text-anchor=\"start\" x=\"396\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 64</text>\n<text text-anchor=\"start\" x=\"366.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 2, 5, 24, 32]</text>\n<text text-anchor=\"start\" x=\"411\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M440.6502,-222.8796C440.5814,-214.6838 440.5083,-205.9891 440.437,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"443.9352,-197.2683 440.3512,-187.2981 436.9355,-197.3272 443.9352,-197.2683\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<path fill=\"#ececfc\" stroke=\"#000000\" d=\"M698.5,-179.5C698.5,-179.5 551.5,-179.5 551.5,-179.5 545.5,-179.5 539.5,-173.5 539.5,-167.5 539.5,-167.5 539.5,-123.5 539.5,-123.5 539.5,-117.5 545.5,-111.5 551.5,-111.5 551.5,-111.5 698.5,-111.5 698.5,-111.5 704.5,-111.5 710.5,-117.5 710.5,-123.5 710.5,-123.5 710.5,-167.5 710.5,-167.5 710.5,-173.5 704.5,-179.5 698.5,-179.5\"/>\n<text text-anchor=\"start\" x=\"587\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.679</text>\n<text text-anchor=\"start\" x=\"581\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 77</text>\n<text text-anchor=\"start\" x=\"547.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 3, 16, 31, 26]</text>\n<text text-anchor=\"start\" x=\"596\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 9&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>9&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M505.3543,-222.8796C524.3167,-210.6158 545.0066,-197.2348 563.7674,-185.1015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"565.7421,-187.9926 572.2383,-179.623 561.9407,-182.1148 565.7421,-187.9926\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<path fill=\"#fbdff5\" stroke=\"#000000\" d=\"M421.5,-68C421.5,-68 282.5,-68 282.5,-68 276.5,-68 270.5,-62 270.5,-56 270.5,-56 270.5,-12 270.5,-12 270.5,-6 276.5,0 282.5,0 282.5,0 421.5,0 421.5,0 427.5,0 433.5,-6 433.5,-12 433.5,-12 433.5,-56 433.5,-56 433.5,-62 427.5,-68 421.5,-68\"/>\n<text text-anchor=\"start\" x=\"314\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.577</text>\n<text text-anchor=\"start\" x=\"308\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 42</text>\n<text text-anchor=\"start\" x=\"278.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 4, 17, 21]</text>\n<text text-anchor=\"start\" x=\"323\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 10&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>10&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M407.232,-103.9815C400.051,-94.8828 392.4421,-85.242 385.2426,-76.1199\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"387.9849,-73.9451 379.0422,-68.2637 382.4901,-78.2818 387.9849,-73.9451\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<path fill=\"#f8caee\" stroke=\"#000000\" d=\"M594.5,-68C594.5,-68 463.5,-68 463.5,-68 457.5,-68 451.5,-62 451.5,-56 451.5,-56 451.5,-12 451.5,-12 451.5,-6 457.5,0 463.5,0 463.5,0 594.5,0 594.5,0 600.5,0 606.5,-6 606.5,-12 606.5,-12 606.5,-56 606.5,-56 606.5,-62 600.5,-68 594.5,-68\"/>\n<text text-anchor=\"start\" x=\"491\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.636</text>\n<text text-anchor=\"start\" x=\"485\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 22</text>\n<text text-anchor=\"start\" x=\"459.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 2, 1, 7, 11]</text>\n<text text-anchor=\"start\" x=\"500\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 10&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>10&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M473.1403,-103.9815C480.403,-94.8828 488.0983,-85.242 495.3796,-76.1199\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"498.1475,-78.2627 501.6505,-68.2637 492.6766,-73.8958 498.1475,-78.2627\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<path fill=\"#f5b5e7\" stroke=\"#000000\" d=\"M516.5,-536.5C516.5,-536.5 385.5,-536.5 385.5,-536.5 379.5,-536.5 373.5,-530.5 373.5,-524.5 373.5,-524.5 373.5,-480.5 373.5,-480.5 373.5,-474.5 379.5,-468.5 385.5,-468.5 385.5,-468.5 516.5,-468.5 516.5,-468.5 522.5,-468.5 528.5,-474.5 528.5,-480.5 528.5,-480.5 528.5,-524.5 528.5,-524.5 528.5,-530.5 522.5,-536.5 516.5,-536.5\"/>\n<text text-anchor=\"start\" x=\"413\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.644</text>\n<text text-anchor=\"start\" x=\"407\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 21</text>\n<text text-anchor=\"start\" x=\"381.5\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 1, 3, 5, 11]</text>\n<text text-anchor=\"start\" x=\"422\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 14&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>14&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M452.3005,-579.8796C452.1212,-569.2134 451.9278,-557.7021 451.7462,-546.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"455.2444,-546.7547 451.5767,-536.8149 448.2454,-546.8724 455.2444,-546.7547\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<path fill=\"#f2a0e1\" stroke=\"#000000\" d=\"M697.5,-536.5C697.5,-536.5 558.5,-536.5 558.5,-536.5 552.5,-536.5 546.5,-530.5 546.5,-524.5 546.5,-524.5 546.5,-480.5 546.5,-480.5 546.5,-474.5 552.5,-468.5 558.5,-468.5 558.5,-468.5 697.5,-468.5 697.5,-468.5 703.5,-468.5 709.5,-474.5 709.5,-480.5 709.5,-480.5 709.5,-524.5 709.5,-524.5 709.5,-530.5 703.5,-536.5 697.5,-536.5\"/>\n<text text-anchor=\"start\" x=\"590\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.547</text>\n<text text-anchor=\"start\" x=\"580\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 146</text>\n<text text-anchor=\"start\" x=\"554.5\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 5, 8, 38, 90]</text>\n<text text-anchor=\"start\" x=\"599\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 14&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>14&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M514.2065,-579.8796C532.079,-567.7263 551.5649,-554.4759 569.2798,-542.4297\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"571.5179,-545.1404 577.8191,-536.623 567.5817,-539.3519 571.5179,-545.1404\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"EhpTdFJ4SkdF"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xiIoeegzkBJw","executionInfo":{"status":"ok","timestamp":1637092026196,"user_tz":360,"elapsed":104,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"7925f1b3-dbb8-451e-8357-cdf31589e3b7"},"source":["model = DecisionTreeClassifier()\n","\n","model.fit(xtrain, ytrain)\n","\n","y_pred = model.predict(xtest)\n","\n","print(f'Accuracy Score: {metrics.accuracy_score(ytest, y_pred)}')\n","print(f'Precision Score: {metrics.precision_score(ytest, y_pred, average=\"macro\")}')\n","print(f'Recall Score: {metrics.recall_score(ytest, y_pred, average=\"macro\")}')\n","print(f'F1 Score: {metrics.f1_score(ytest, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.49504950495049505\n","Precision Score: 0.20410958904109586\n","Recall Score: 0.2453156146179402\n","F1 Score: 0.21239041496201053\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":409},"id":"fh77Jc7rlcqJ","executionInfo":{"status":"ok","timestamp":1637091748643,"user_tz":360,"elapsed":13369,"user":{"displayName":"Peyton Camden","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gip1ItjdrEXI-FsCnf5OZiVrO_cZsS-f4jYt0N0=s64","userId":"05603889732474499873"}},"outputId":"72cf2aa5-6e69-4c45-aaa1-e952617c6cba"},"source":["# Run this cell if working in Google CoLab\n","!pip uninstall scikit-learn -y\n","!pip uninstall imbalanced-learn -y\n","\n","!pip install -U scikit-learn imbalanced-learn"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found existing installation: scikit-learn 1.0.1\n","Uninstalling scikit-learn-1.0.1:\n","  Successfully uninstalled scikit-learn-1.0.1\n","Found existing installation: imbalanced-learn 0.8.1\n","Uninstalling imbalanced-learn-0.8.1:\n","  Successfully uninstalled imbalanced-learn-0.8.1\n","Collecting scikit-learn\n","  Downloading scikit_learn-1.0.1-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (23.2 MB)\n","\u001b[K     |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 23.2 MB 70 kB/s \n","\u001b[?25hCollecting imbalanced-learn\n","  Downloading imbalanced_learn-0.8.1-py3-none-any.whl (189 kB)\n","\u001b[K     |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 189 kB 60.9 MB/s \n","\u001b[?25hRequirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (1.1.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (3.0.0)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (1.4.1)\n","Requirement already satisfied: numpy>=1.14.6 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (1.19.5)\n","Installing collected packages: scikit-learn, imbalanced-learn\n","Successfully installed imbalanced-learn-0.8.1 scikit-learn-1.0.1\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["imblearn","sklearn"]}}},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"2RgSW8COlRqK"},"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","\n","from imblearn.over_sampling import RandomOverSampler, SMOTE\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier, BaggingRegressor, AdaBoostClassifier\n","from sklearn.linear_model import SGDRegressor\n","from sklearn import metrics\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.utils import class_weight"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dPWyLSsyk9uM"},"source":["def model_validation(ytrue, y_pred):\n","    '''Definition for computing and printing a series of Classification metric scores'''\n","    print(f'Accuracy Score: {metrics.accuracy_score(ytrue, y_pred)}')\n","    print(f'Precision Score: {metrics.precision_score(ytrue, y_pred, average=\"macro\")}')\n","    print(f'Recall Score: {metrics.recall_score(ytrue, y_pred, average=\"macro\")}')\n","    print(f'F1 Score: {metrics.f1_score(ytrue, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ftmjOXujkF9g","executionInfo":{"status":"ok","timestamp":1637092034114,"user_tz":360,"elapsed":339,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"d92e67f4-e082-45af-9e96-c74d944c59f0"},"source":["# Set parameter for max number of features for Random Forest\n","from sklearn.ensemble import RandomForestClassifier, BaggingRegressor, AdaBoostClassifier\n","\n","features = df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']]\n","target = df['Score']\n","\n","xtrain, xtest, ytrain, ytrue = train_test_split(features, target)\n","\n","\n","m = np.int64(np.sqrt(features.shape[1]))\n","print(m)\n","\n","# Set up our Random Forest\n","random_forest = RandomForestClassifier(max_samples=0.75, oob_score=True)\n","random_forest.fit(xtrain, ytrain)\n","\n","y_pred = random_forest.predict(xtest)\n","\n","model_validation(ytrue, y_pred)\n","\n","random_forest.feature_names_in_"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","Accuracy Score: 0.5158730158730159\n","Precision Score: 0.20625610948191592\n","Recall Score: 0.25668763102725367\n","F1 Score: 0.21868633649455566\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:446: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  \"X does not have valid feature names, but\"\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"execute_result","data":{"text/plain":["array(['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa',\n","       'Dummy Gym'], dtype=object)"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"ajePwZuinTGJ","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1637091955066,"user_tz":360,"elapsed":332,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"bcc8a224-4b45-443f-d8d9-9d9c6cd559fe"},"source":["from sklearn.metrics import confusion_matrix\n","\n","# Confusion matrix function makes easy work of obtaining matrix\n","mat = confusion_matrix(ytrue, y_pred)\n","\n","# Use seaborn to make a heatmap of the confusion matrix\n","sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False,\n","            xticklabels=model.classes_, yticklabels=model.classes_, cmap=plt.cm.BuPu)\n","plt.xlabel('true label')\n","plt.ylabel('predicted label');"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"eowgPhJ9tlTn","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1637094997001,"user_tz":360,"elapsed":256,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"bee3a8bb-4d68-4439-8f51-6fe59596f529"},"source":["from sklearn.metrics import confusion_matrix\n","\n","# Confusion matrix function makes easy work of obtaining matrix\n","mat = confusion_matrix(ytrue, y_pred)\n","\n","# Use seaborn to make a heatmap of the confusion matrix\n","sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False,\n","            xticklabels=model.classes_, yticklabels=model.classes_, cmap=plt.cm.BuPu)\n","plt.xlabel('true label')\n","plt.ylabel('predicted label');"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"_UyZ-fPGntGK"},"source":["# Over Sampling the Data"]},{"cell_type":"code","metadata":{"id":"60Gvo3ijnyxo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637094971050,"user_tz":360,"elapsed":111,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"429a8a4e-e2bc-4345-8dd5-82a17e28cd5f"},"source":["features = df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']]\n","target = df['Score']\n","\n","xtrain, xtest, ytrain, ytrue = train_test_split(features, target)\n","\n","ros = RandomOverSampler()#random_state=42)\n","X_resampled, y_resampled = ros.fit_resample(xtrain, ytrain)\n","\n","model = DecisionTreeClassifier()#random_state=5)\n","\n","model.fit(X_resampled, y_resampled)\n","\n","y_pred = model.predict(xtest)\n","\n","model_validation(ytrue, y_pred)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.15079365079365079\n","Precision Score: 0.13609920134510298\n","Recall Score: 0.23694749694749695\n","F1 Score: 0.13943803702317634\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XeeFel2vdBlX","executionInfo":{"status":"ok","timestamp":1637094993976,"user_tz":360,"elapsed":394,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"b0273f69-e1fd-4fdf-e49b-914072ca577d"},"source":["features = df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']]\n","target = df['Score']\n","\n","xtrain, xtest, ytrain, ytrue = train_test_split(features, target)\n","\n","ros = RandomOverSampler()#random_state=42)\n","X_resampled, y_resampled = ros.fit_resample(xtrain, ytrain)\n","\n","m = np.int64(np.sqrt(features.shape[1]))\n","print(m)\n","\n","# Set up our Random Forest\n","random_forest = RandomForestClassifier(max_samples=0.75, oob_score=True)\n","random_forest.fit(X_resampled, y_resampled)\n","\n","y_pred = random_forest.predict(xtest)\n","\n","model_validation(ytrue, y_pred)\n","\n","random_forest.feature_names_in_"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","Accuracy Score: 0.40476190476190477\n","Precision Score: 0.31986967418546364\n","Recall Score: 0.3013602693602694\n","F1 Score: 0.2763195797678556\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:446: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]},{"output_type":"execute_result","data":{"text/plain":["array(['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa',\n","       'Dummy Gym'], dtype=object)"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"K8OXpeYqotuM"},"source":["from imblearn.over_sampling import RandomOverSampler, SMOTE\n","from imblearn.under_sampling import RandomUnderSampler\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn import metrics\n","from sklearn.utils import class_weight"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"e8qc8qp9q1l8"},"source":["# Under Sampling"]},{"cell_type":"code","metadata":{"id":"ra1p-XWqpIFm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637081817770,"user_tz":360,"elapsed":166,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"ae22a49a-cb69-43ff-ef8e-10b803b028cb"},"source":["# logistic regression object\n","lr = LogisticRegression()\n"," \n","# train the model on train set\n","lr.fit(xtrain, ytrain.ravel())\n"," \n","predictions = lr.predict(xtest)\n"," \n","# print classification report\n","print(metrics.classification_report(ytrue, predictions))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         5\n","           2       0.00      0.00      0.00        11\n","           3       0.00      0.00      0.00        18\n","           4       0.22      0.25      0.24        32\n","           5       0.51      0.77      0.61        60\n","\n","    accuracy                           0.43       126\n","   macro avg       0.15      0.20      0.17       126\n","weighted avg       0.30      0.43      0.35       126\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"id":"aVdrEohEp7-4"},"source":["sm = SMOTE(sampling_strategy='minority', random_state = 2)\n","xtrain_res, ytrain_res = sm.fit_resample(xtrain, ytrain)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_rbLxJi_qEpV"},"source":["print(xtrain_res.shape)\n","print(ytrain_res.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6B18fqvyqJDX"},"source":["lr1 = LogisticRegression()\n","lr1.fit(xtrain_res, ytrain_res)\n","predictions = lr1.predict(xtest)\n"," \n","# print classification report\n","print(metrics.classification_report(ytest, predictions))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YKVaLVXfqi4U"},"source":["predictions = (lr1.predict_proba(xtest)[:,1]>=0.7).astype(int)\n"," \n","# print classification report\n","print(metrics.classification_report(ytest, predictions))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-vV5eGpfrCQM"},"source":["# Ada Boost"]},{"cell_type":"code","metadata":{"id":"EhD6DQ6Uq5NU"},"source":["adaboost = AdaBoostClassifier(base_estimator=RandomForestClassifier(max_features=m, max_samples=.75),\n","                              learning_rate=.1, n_estimators=25, random_state=1)\n","\n","adaboost.fit(xtrain, ytrain)\n","\n","y_pred = adaboost.predict(xtest)\n","\n","model_validation(ytest, y_pred)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oqaiS4ubrTgT"},"source":[""],"execution_count":null,"outputs":[]}]}