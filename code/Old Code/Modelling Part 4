{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Modelling Part 4","provenance":[{"file_id":"1GZe_jHXU3UxlkqYef2VNWygJus3mG9br","timestamp":1638301150841},{"file_id":"1DgLA4nPQ3aU2iunEseDZAy7F4aJsqsOl","timestamp":1637080870687}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"60ZY5cW7eADh","executionInfo":{"status":"ok","timestamp":1638997889648,"user_tz":360,"elapsed":1454,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}}},"source":["from imblearn.over_sampling import RandomOverSampler, SMOTE\n","from imblearn.under_sampling import RandomUnderSampler\n","import graphviz\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from sklearn.datasets import load_iris\n","from sklearn import metrics\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.tree import DecisionTreeClassifier, export_graphviz"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"zUNZafd-ijb7","executionInfo":{"status":"ok","timestamp":1638997891004,"user_tz":360,"elapsed":85,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}}},"source":["df = pd.read_csv('Numerical_data(No Zero).csv')"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"8su17pDAipwa","executionInfo":{"status":"ok","timestamp":1638997896452,"user_tz":360,"elapsed":85,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"877661e0-7d15-4faa-b6a3-ae47c15ac2a0"},"source":["df"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Unnamed: 0.1</th>\n","      <th>Nr. reviews</th>\n","      <th>Nr. hotel reviews</th>\n","      <th>Helpful votes</th>\n","      <th>Score</th>\n","      <th>Hotel stars</th>\n","      <th>Nr. rooms</th>\n","      <th>Member years</th>\n","      <th>Num Traveler type</th>\n","      <th>Num User country</th>\n","      <th>Num Hotel name</th>\n","      <th>Dummy Pool</th>\n","      <th>Dummy Gym</th>\n","      <th>Dummy Tennis</th>\n","      <th>Dummy Spa</th>\n","      <th>Dummy Casino</th>\n","      <th>Dummy Free Internet</th>\n","      <th>Num Review month</th>\n","      <th>Num User continent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>119</td>\n","      <td>21</td>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>36</td>\n","      <td>9</td>\n","      <td>25</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>499</td>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>500</td>\n","      <td>50</td>\n","      <td>13</td>\n","      <td>29</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>501</td>\n","      <td>501</td>\n","      <td>154</td>\n","      <td>23</td>\n","      <td>31</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>502</td>\n","      <td>502</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>503</td>\n","      <td>503</td>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>112</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows Ã— 20 columns</p>\n","</div>"],"text/plain":["     Unnamed: 0  Unnamed: 0.1  ...  Num Review month  Num User continent\n","0             0             0  ...                 1                   1\n","1             1             1  ...                 1                   1\n","2             2             2  ...                 2                   1\n","3             3             3  ...                 2                   2\n","4             4             4  ...                 3                   1\n","..          ...           ...  ...               ...                 ...\n","499         499           499  ...                10                   2\n","500         500           500  ...                11                   1\n","501         501           501  ...                11                   1\n","502         502           502  ...                12                   1\n","503         503           503  ...                12                   1\n","\n","[504 rows x 20 columns]"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"_w4WZud1iqIl","executionInfo":{"status":"ok","timestamp":1638997898118,"user_tz":360,"elapsed":83,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}}},"source":["df = df.drop(columns=['Unnamed: 0'])"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"sVnWSyRwi2sa","executionInfo":{"status":"ok","timestamp":1638997899049,"user_tz":360,"elapsed":81,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}}},"source":["df = df.drop(columns=['Unnamed: 0.1'])"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"lSwEQVB6i-Zq","executionInfo":{"status":"ok","timestamp":1638997899718,"user_tz":360,"elapsed":7,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"c1d5bd02-ee82-47b1-8379-4a372d0f2787"},"source":["df"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nr. reviews</th>\n","      <th>Nr. hotel reviews</th>\n","      <th>Helpful votes</th>\n","      <th>Score</th>\n","      <th>Hotel stars</th>\n","      <th>Nr. rooms</th>\n","      <th>Member years</th>\n","      <th>Num Traveler type</th>\n","      <th>Num User country</th>\n","      <th>Num Hotel name</th>\n","      <th>Dummy Pool</th>\n","      <th>Dummy Gym</th>\n","      <th>Dummy Tennis</th>\n","      <th>Dummy Spa</th>\n","      <th>Dummy Casino</th>\n","      <th>Dummy Free Internet</th>\n","      <th>Num Review month</th>\n","      <th>Num User continent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>119</td>\n","      <td>21</td>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>36</td>\n","      <td>9</td>\n","      <td>25</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>50</td>\n","      <td>13</td>\n","      <td>29</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>154</td>\n","      <td>23</td>\n","      <td>31</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>112</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows Ã— 18 columns</p>\n","</div>"],"text/plain":["     Nr. reviews  Nr. hotel reviews  ...  Num Review month  Num User continent\n","0             11                  4  ...                 1                   1\n","1            119                 21  ...                 1                   1\n","2             36                  9  ...                 2                   1\n","3             14                  7  ...                 2                   2\n","4              5                  5  ...                 3                   1\n","..           ...                ...  ...               ...                 ...\n","499           15                  4  ...                10                   2\n","500           50                 13  ...                11                   1\n","501          154                 23  ...                11                   1\n","502            9                  6  ...                12                   1\n","503           20                 19  ...                12                   1\n","\n","[504 rows x 18 columns]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"h0kZN5oni-vN","executionInfo":{"status":"ok","timestamp":1638997908987,"user_tz":360,"elapsed":79,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}}},"source":["xtrain, xtest, ytrain, ytest = train_test_split(df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']], df['Score'],train_size=0.8)\n","\n","# Initialize our decision tree object\n","classification_tree = DecisionTreeClassifier()\n","\n","# Train our decision tree (tree induction + pruning)\n","classification_tree = classification_tree.fit(xtrain, ytrain)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"-zOFPoOIjlEa","executionInfo":{"status":"ok","timestamp":1637093034524,"user_tz":360,"elapsed":155,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"6bf29951-9429-4961-ebd0-b149b5a02274"},"source":["dot_data = export_graphviz(classification_tree, out_file=None,  \n","                           feature_names = ['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym'],  \n","                           class_names = ['1','2','3','4','5'], \n","                           filled=True, rounded=True,  \n","                           special_characters=True)  \n","graph = graphviz.Source(dot_data)\n","graph\n","\n","#graph.render(\"Model DT\", view=True) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<graphviz.files.Source at 0x7f4fbbc51290>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"719pt\" height=\"790pt\"\n viewBox=\"0.00 0.00 718.50 790.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 786)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-786 714.5,-786 714.5,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#fad9f3\" stroke=\"#000000\" d=\"M444,-782C444,-782 264,-782 264,-782 258,-782 252,-776 252,-770 252,-770 252,-711 252,-711 252,-705 258,-699 264,-699 264,-699 444,-699 444,-699 450,-699 456,-705 456,-711 456,-711 456,-770 456,-770 456,-776 450,-782 444,-782\"/>\n<text text-anchor=\"start\" x=\"297.5\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 4.25</text>\n<text text-anchor=\"start\" x=\"316\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.665</text>\n<text text-anchor=\"start\" x=\"306\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 403</text>\n<text text-anchor=\"start\" x=\"260\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 22, 56, 131, 183]</text>\n<text text-anchor=\"start\" x=\"325\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#f7f7fe\" stroke=\"#000000\" d=\"M333.5,-663C333.5,-663 178.5,-663 178.5,-663 172.5,-663 166.5,-657 166.5,-651 166.5,-651 166.5,-592 166.5,-592 166.5,-586 172.5,-580 178.5,-580 178.5,-580 333.5,-580 333.5,-580 339.5,-580 345.5,-586 345.5,-592 345.5,-592 345.5,-651 345.5,-651 345.5,-657 339.5,-663 333.5,-663\"/>\n<text text-anchor=\"start\" x=\"196.5\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Pool â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"218\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.699</text>\n<text text-anchor=\"start\" x=\"208\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 236</text>\n<text text-anchor=\"start\" x=\"174.5\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 16, 45, 88, 82]</text>\n<text text-anchor=\"start\" x=\"227\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M319.7244,-698.8796C312.3816,-689.9633 304.5524,-680.4565 296.9854,-671.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"299.4808,-668.7924 290.4219,-663.2981 294.0773,-673.2424 299.4808,-668.7924\"/>\n<text text-anchor=\"middle\" x=\"288.0138\" y=\"-684.4818\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<path fill=\"#f3a2e2\" stroke=\"#000000\" d=\"M530.5,-663C530.5,-663 375.5,-663 375.5,-663 369.5,-663 363.5,-657 363.5,-651 363.5,-651 363.5,-592 363.5,-592 363.5,-586 369.5,-580 375.5,-580 375.5,-580 530.5,-580 530.5,-580 536.5,-580 542.5,-586 542.5,-592 542.5,-592 542.5,-651 542.5,-651 542.5,-657 536.5,-663 530.5,-663\"/>\n<text text-anchor=\"start\" x=\"396.5\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 4.75</text>\n<text text-anchor=\"start\" x=\"415\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.561</text>\n<text text-anchor=\"start\" x=\"405\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 167</text>\n<text text-anchor=\"start\" x=\"371.5\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 6, 11, 43, 101]</text>\n<text text-anchor=\"start\" x=\"424\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 0&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>0&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M388.6254,-698.8796C396.118,-689.8733 404.1119,-680.2644 411.8279,-670.9897\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"414.5219,-673.224 418.2268,-663.2981 409.1407,-668.7472 414.5219,-673.224\"/>\n<text text-anchor=\"middle\" x=\"420.5108\" y=\"-684.4935\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<path fill=\"#d1d0f9\" stroke=\"#000000\" d=\"M134,-536.5C134,-536.5 12,-536.5 12,-536.5 6,-536.5 0,-530.5 0,-524.5 0,-524.5 0,-480.5 0,-480.5 0,-474.5 6,-468.5 12,-468.5 12,-468.5 134,-468.5 134,-468.5 140,-468.5 146,-474.5 146,-480.5 146,-480.5 146,-524.5 146,-524.5 146,-530.5 140,-536.5 134,-536.5\"/>\n<text text-anchor=\"start\" x=\"35\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.731</text>\n<text text-anchor=\"start\" x=\"29\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 22</text>\n<text text-anchor=\"start\" x=\"8\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 4, 5, 9, 2]</text>\n<text text-anchor=\"start\" x=\"44\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M191.9955,-579.8796C173.1361,-567.6158 152.5586,-554.2348 133.8998,-542.1015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"135.7664,-539.1404 125.4749,-536.623 131.9503,-545.0088 135.7664,-539.1404\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<path fill=\"#fffeff\" stroke=\"#000000\" d=\"M340,-544C340,-544 176,-544 176,-544 170,-544 164,-538 164,-532 164,-532 164,-473 164,-473 164,-467 170,-461 176,-461 176,-461 340,-461 340,-461 346,-461 352,-467 352,-473 352,-473 352,-532 352,-532 352,-538 346,-544 340,-544\"/>\n<text text-anchor=\"start\" x=\"172\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Free Internet â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"220\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.686</text>\n<text text-anchor=\"start\" x=\"210\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 214</text>\n<text text-anchor=\"start\" x=\"176.5\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 12, 40, 79, 80]</text>\n<text text-anchor=\"start\" x=\"229\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 1&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>1&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M256.6995,-579.8796C256.8372,-571.6838 256.9834,-562.9891 257.126,-554.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"260.6289,-554.3555 257.2975,-544.2981 253.6299,-554.2378 260.6289,-554.3555\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<path fill=\"#d5d5f9\" stroke=\"#000000\" d=\"M231,-417.5C231,-417.5 109,-417.5 109,-417.5 103,-417.5 97,-411.5 97,-405.5 97,-405.5 97,-361.5 97,-361.5 97,-355.5 103,-349.5 109,-349.5 109,-349.5 231,-349.5 231,-349.5 237,-349.5 243,-355.5 243,-361.5 243,-361.5 243,-405.5 243,-405.5 243,-411.5 237,-417.5 231,-417.5\"/>\n<text text-anchor=\"start\" x=\"132\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.715</text>\n<text text-anchor=\"start\" x=\"126\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 19</text>\n<text text-anchor=\"start\" x=\"105\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 5, 3, 8, 2]</text>\n<text text-anchor=\"start\" x=\"141\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M227.2219,-460.8796C218.8464,-449.5536 209.7662,-437.2748 201.3589,-425.9058\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"204.1357,-423.7743 195.3758,-417.8149 198.5075,-427.9364 204.1357,-423.7743\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<path fill=\"#fef4fb\" stroke=\"#000000\" d=\"M420.5,-425C420.5,-425 273.5,-425 273.5,-425 267.5,-425 261.5,-419 261.5,-413 261.5,-413 261.5,-354 261.5,-354 261.5,-348 267.5,-342 273.5,-342 273.5,-342 420.5,-342 420.5,-342 426.5,-342 432.5,-348 432.5,-354 432.5,-354 432.5,-413 432.5,-413 432.5,-419 426.5,-425 420.5,-425\"/>\n<text text-anchor=\"start\" x=\"290.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 3.25</text>\n<text text-anchor=\"start\" x=\"313.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.67</text>\n<text text-anchor=\"start\" x=\"299\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 195</text>\n<text text-anchor=\"start\" x=\"269.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 7, 37, 71, 78]</text>\n<text text-anchor=\"start\" x=\"318\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M289.1279,-460.8796C295.729,-452.0534 302.7629,-442.6485 309.5702,-433.5466\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"312.5528,-435.4024 315.7393,-425.2981 306.9472,-431.2099 312.5528,-435.4024\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<path fill=\"#fceaf8\" stroke=\"#000000\" d=\"M325.5,-306C325.5,-306 178.5,-306 178.5,-306 172.5,-306 166.5,-300 166.5,-294 166.5,-294 166.5,-235 166.5,-235 166.5,-229 172.5,-223 178.5,-223 178.5,-223 325.5,-223 325.5,-223 331.5,-223 337.5,-229 337.5,-235 337.5,-235 337.5,-294 337.5,-294 337.5,-300 331.5,-306 325.5,-306\"/>\n<text text-anchor=\"start\" x=\"194\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Spa â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"214\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.686</text>\n<text text-anchor=\"start\" x=\"208\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 54</text>\n<text text-anchor=\"start\" x=\"174.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 16, 16, 20]</text>\n<text text-anchor=\"start\" x=\"223\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 5&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>5&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M313.7736,-341.8796C306.6556,-332.9633 299.0661,-323.4565 291.7308,-314.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"294.3425,-311.9295 285.3682,-306.2981 288.8719,-316.2968 294.3425,-311.9295\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<path fill=\"#fef8fd\" stroke=\"#000000\" d=\"M514.5,-306C514.5,-306 367.5,-306 367.5,-306 361.5,-306 355.5,-300 355.5,-294 355.5,-294 355.5,-235 355.5,-235 355.5,-229 361.5,-223 367.5,-223 367.5,-223 514.5,-223 514.5,-223 520.5,-223 526.5,-229 526.5,-235 526.5,-235 526.5,-294 526.5,-294 526.5,-300 520.5,-306 514.5,-306\"/>\n<text text-anchor=\"start\" x=\"384.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Hotel stars â‰¤ 3.75</text>\n<text text-anchor=\"start\" x=\"403\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.655</text>\n<text text-anchor=\"start\" x=\"393\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 141</text>\n<text text-anchor=\"start\" x=\"363.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 5, 21, 55, 58]</text>\n<text text-anchor=\"start\" x=\"412\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 5&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>5&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M379.8766,-341.8796C386.9197,-332.9633 394.4293,-323.4565 401.6874,-314.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"404.5309,-316.3147 407.983,-306.2981 399.0379,-311.9757 404.5309,-316.3147\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<path fill=\"#f8ceef\" stroke=\"#000000\" d=\"M137,-179.5C137,-179.5 15,-179.5 15,-179.5 9,-179.5 3,-173.5 3,-167.5 3,-167.5 3,-123.5 3,-123.5 3,-117.5 9,-111.5 15,-111.5 15,-111.5 137,-111.5 137,-111.5 143,-111.5 149,-117.5 149,-123.5 149,-123.5 149,-167.5 149,-167.5 149,-173.5 143,-179.5 137,-179.5\"/>\n<text text-anchor=\"start\" x=\"42.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.68</text>\n<text text-anchor=\"start\" x=\"32\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"start\" x=\"11\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 4, 4, 7]</text>\n<text text-anchor=\"start\" x=\"47\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M190.4437,-222.8796C172.4691,-210.7263 152.8718,-197.4759 135.0558,-185.4297\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"136.7123,-182.3248 126.4677,-179.623 132.7914,-188.1237 136.7123,-182.3248\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<path fill=\"#fef7fd\" stroke=\"#000000\" d=\"M326.5,-179.5C326.5,-179.5 179.5,-179.5 179.5,-179.5 173.5,-179.5 167.5,-173.5 167.5,-167.5 167.5,-167.5 167.5,-123.5 167.5,-123.5 167.5,-117.5 173.5,-111.5 179.5,-111.5 179.5,-111.5 326.5,-111.5 326.5,-111.5 332.5,-111.5 338.5,-117.5 338.5,-123.5 338.5,-123.5 338.5,-167.5 338.5,-167.5 338.5,-173.5 332.5,-179.5 326.5,-179.5\"/>\n<text text-anchor=\"start\" x=\"215\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.683</text>\n<text text-anchor=\"start\" x=\"209\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 38</text>\n<text text-anchor=\"start\" x=\"175.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 12, 12, 13]</text>\n<text text-anchor=\"start\" x=\"224\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 6&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>6&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M252.3498,-222.8796C252.4394,-212.2134 252.5361,-200.7021 252.6269,-189.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"256.1274,-189.844 252.7116,-179.8149 249.1276,-189.7851 256.1274,-189.844\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<path fill=\"#fad7f2\" stroke=\"#000000\" d=\"M509.5,-187C509.5,-187 370.5,-187 370.5,-187 364.5,-187 358.5,-181 358.5,-175 358.5,-175 358.5,-116 358.5,-116 358.5,-110 364.5,-104 370.5,-104 370.5,-104 509.5,-104 509.5,-104 515.5,-104 521.5,-110 521.5,-116 521.5,-116 521.5,-175 521.5,-175 521.5,-181 515.5,-187 509.5,-187\"/>\n<text text-anchor=\"start\" x=\"382\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy Spa â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"402\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.602</text>\n<text text-anchor=\"start\" x=\"396\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 64</text>\n<text text-anchor=\"start\" x=\"366.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 2, 5, 24, 32]</text>\n<text text-anchor=\"start\" x=\"411\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M440.6502,-222.8796C440.5814,-214.6838 440.5083,-205.9891 440.437,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"443.9352,-197.2683 440.3512,-187.2981 436.9355,-197.3272 443.9352,-197.2683\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<path fill=\"#ececfc\" stroke=\"#000000\" d=\"M698.5,-179.5C698.5,-179.5 551.5,-179.5 551.5,-179.5 545.5,-179.5 539.5,-173.5 539.5,-167.5 539.5,-167.5 539.5,-123.5 539.5,-123.5 539.5,-117.5 545.5,-111.5 551.5,-111.5 551.5,-111.5 698.5,-111.5 698.5,-111.5 704.5,-111.5 710.5,-117.5 710.5,-123.5 710.5,-123.5 710.5,-167.5 710.5,-167.5 710.5,-173.5 704.5,-179.5 698.5,-179.5\"/>\n<text text-anchor=\"start\" x=\"587\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.679</text>\n<text text-anchor=\"start\" x=\"581\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 77</text>\n<text text-anchor=\"start\" x=\"547.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 3, 16, 31, 26]</text>\n<text text-anchor=\"start\" x=\"596\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 9&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>9&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M505.3543,-222.8796C524.3167,-210.6158 545.0066,-197.2348 563.7674,-185.1015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"565.7421,-187.9926 572.2383,-179.623 561.9407,-182.1148 565.7421,-187.9926\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<path fill=\"#fbdff5\" stroke=\"#000000\" d=\"M421.5,-68C421.5,-68 282.5,-68 282.5,-68 276.5,-68 270.5,-62 270.5,-56 270.5,-56 270.5,-12 270.5,-12 270.5,-6 276.5,0 282.5,0 282.5,0 421.5,0 421.5,0 427.5,0 433.5,-6 433.5,-12 433.5,-12 433.5,-56 433.5,-56 433.5,-62 427.5,-68 421.5,-68\"/>\n<text text-anchor=\"start\" x=\"314\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.577</text>\n<text text-anchor=\"start\" x=\"308\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 42</text>\n<text text-anchor=\"start\" x=\"278.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 4, 17, 21]</text>\n<text text-anchor=\"start\" x=\"323\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 10&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>10&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M407.232,-103.9815C400.051,-94.8828 392.4421,-85.242 385.2426,-76.1199\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"387.9849,-73.9451 379.0422,-68.2637 382.4901,-78.2818 387.9849,-73.9451\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<path fill=\"#f8caee\" stroke=\"#000000\" d=\"M594.5,-68C594.5,-68 463.5,-68 463.5,-68 457.5,-68 451.5,-62 451.5,-56 451.5,-56 451.5,-12 451.5,-12 451.5,-6 457.5,0 463.5,0 463.5,0 594.5,0 594.5,0 600.5,0 606.5,-6 606.5,-12 606.5,-12 606.5,-56 606.5,-56 606.5,-62 600.5,-68 594.5,-68\"/>\n<text text-anchor=\"start\" x=\"491\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.636</text>\n<text text-anchor=\"start\" x=\"485\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 22</text>\n<text text-anchor=\"start\" x=\"459.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 2, 1, 7, 11]</text>\n<text text-anchor=\"start\" x=\"500\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 10&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>10&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M473.1403,-103.9815C480.403,-94.8828 488.0983,-85.242 495.3796,-76.1199\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"498.1475,-78.2627 501.6505,-68.2637 492.6766,-73.8958 498.1475,-78.2627\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<path fill=\"#f5b5e7\" stroke=\"#000000\" d=\"M516.5,-536.5C516.5,-536.5 385.5,-536.5 385.5,-536.5 379.5,-536.5 373.5,-530.5 373.5,-524.5 373.5,-524.5 373.5,-480.5 373.5,-480.5 373.5,-474.5 379.5,-468.5 385.5,-468.5 385.5,-468.5 516.5,-468.5 516.5,-468.5 522.5,-468.5 528.5,-474.5 528.5,-480.5 528.5,-480.5 528.5,-524.5 528.5,-524.5 528.5,-530.5 522.5,-536.5 516.5,-536.5\"/>\n<text text-anchor=\"start\" x=\"413\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.644</text>\n<text text-anchor=\"start\" x=\"407\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 21</text>\n<text text-anchor=\"start\" x=\"381.5\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 1, 3, 5, 11]</text>\n<text text-anchor=\"start\" x=\"422\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 14&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>14&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M452.3005,-579.8796C452.1212,-569.2134 451.9278,-557.7021 451.7462,-546.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"455.2444,-546.7547 451.5767,-536.8149 448.2454,-546.8724 455.2444,-546.7547\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<path fill=\"#f2a0e1\" stroke=\"#000000\" d=\"M697.5,-536.5C697.5,-536.5 558.5,-536.5 558.5,-536.5 552.5,-536.5 546.5,-530.5 546.5,-524.5 546.5,-524.5 546.5,-480.5 546.5,-480.5 546.5,-474.5 552.5,-468.5 558.5,-468.5 558.5,-468.5 697.5,-468.5 697.5,-468.5 703.5,-468.5 709.5,-474.5 709.5,-480.5 709.5,-480.5 709.5,-524.5 709.5,-524.5 709.5,-530.5 703.5,-536.5 697.5,-536.5\"/>\n<text text-anchor=\"start\" x=\"590\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.547</text>\n<text text-anchor=\"start\" x=\"580\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 146</text>\n<text text-anchor=\"start\" x=\"554.5\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 5, 8, 38, 90]</text>\n<text text-anchor=\"start\" x=\"599\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 14&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>14&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M514.2065,-579.8796C532.079,-567.7263 551.5649,-554.4759 569.2798,-542.4297\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"571.5179,-545.1404 577.8191,-536.623 567.5817,-539.3519 571.5179,-545.1404\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"EhpTdFJ4SkdF"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xiIoeegzkBJw","executionInfo":{"status":"ok","timestamp":1637092026196,"user_tz":360,"elapsed":104,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"7925f1b3-dbb8-451e-8357-cdf31589e3b7"},"source":["model = DecisionTreeClassifier()\n","\n","model.fit(xtrain, ytrain)\n","\n","y_pred = model.predict(xtest)\n","\n","print(f'Accuracy Score: {metrics.accuracy_score(ytest, y_pred)}')\n","print(f'Precision Score: {metrics.precision_score(ytest, y_pred, average=\"macro\")}')\n","print(f'Recall Score: {metrics.recall_score(ytest, y_pred, average=\"macro\")}')\n","print(f'F1 Score: {metrics.f1_score(ytest, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.49504950495049505\n","Precision Score: 0.20410958904109586\n","Recall Score: 0.2453156146179402\n","F1 Score: 0.21239041496201053\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":409},"id":"fh77Jc7rlcqJ","executionInfo":{"status":"ok","timestamp":1637091748643,"user_tz":360,"elapsed":13369,"user":{"displayName":"Peyton Camden","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gip1ItjdrEXI-FsCnf5OZiVrO_cZsS-f4jYt0N0=s64","userId":"05603889732474499873"}},"outputId":"72cf2aa5-6e69-4c45-aaa1-e952617c6cba"},"source":["# Run this cell if working in Google CoLab\n","!pip uninstall scikit-learn -y\n","!pip uninstall imbalanced-learn -y\n","\n","!pip install -U scikit-learn imbalanced-learn"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found existing installation: scikit-learn 1.0.1\n","Uninstalling scikit-learn-1.0.1:\n","  Successfully uninstalled scikit-learn-1.0.1\n","Found existing installation: imbalanced-learn 0.8.1\n","Uninstalling imbalanced-learn-0.8.1:\n","  Successfully uninstalled imbalanced-learn-0.8.1\n","Collecting scikit-learn\n","  Downloading scikit_learn-1.0.1-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (23.2 MB)\n","\u001b[K     |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 23.2 MB 70 kB/s \n","\u001b[?25hCollecting imbalanced-learn\n","  Downloading imbalanced_learn-0.8.1-py3-none-any.whl (189 kB)\n","\u001b[K     |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 189 kB 60.9 MB/s \n","\u001b[?25hRequirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (1.1.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (3.0.0)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (1.4.1)\n","Requirement already satisfied: numpy>=1.14.6 in /usr/local/lib/python3.7/dist-packages (from scikit-learn) (1.19.5)\n","Installing collected packages: scikit-learn, imbalanced-learn\n","Successfully installed imbalanced-learn-0.8.1 scikit-learn-1.0.1\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["imblearn","sklearn"]}}},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"2RgSW8COlRqK"},"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","\n","from imblearn.over_sampling import RandomOverSampler, SMOTE\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier, BaggingRegressor, AdaBoostClassifier\n","from sklearn.linear_model import SGDRegressor\n","from sklearn import metrics\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.utils import class_weight"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dPWyLSsyk9uM"},"source":["def model_validation(ytrue, y_pred):\n","    '''Definition for computing and printing a series of Classification metric scores'''\n","    print(f'Accuracy Score: {metrics.accuracy_score(ytrue, y_pred)}')\n","    print(f'Precision Score: {metrics.precision_score(ytrue, y_pred, average=\"macro\")}')\n","    print(f'Recall Score: {metrics.recall_score(ytrue, y_pred, average=\"macro\")}')\n","    print(f'F1 Score: {metrics.f1_score(ytrue, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ftmjOXujkF9g","executionInfo":{"status":"ok","timestamp":1637092034114,"user_tz":360,"elapsed":339,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"d92e67f4-e082-45af-9e96-c74d944c59f0"},"source":["# Set parameter for max number of features for Random Forest\n","from sklearn.ensemble import RandomForestClassifier, BaggingRegressor, AdaBoostClassifier\n","\n","features = df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']]\n","target = df['Score']\n","\n","xtrain, xtest, ytrain, ytrue = train_test_split(features, target)\n","\n","\n","m = np.int64(np.sqrt(features.shape[1]))\n","print(m)\n","\n","# Set up our Random Forest\n","random_forest = RandomForestClassifier(max_samples=0.75, oob_score=True)\n","random_forest.fit(xtrain, ytrain)\n","\n","y_pred = random_forest.predict(xtest)\n","\n","model_validation(ytrue, y_pred)\n","\n","random_forest.feature_names_in_"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","Accuracy Score: 0.5158730158730159\n","Precision Score: 0.20625610948191592\n","Recall Score: 0.25668763102725367\n","F1 Score: 0.21868633649455566\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:446: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  \"X does not have valid feature names, but\"\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"execute_result","data":{"text/plain":["array(['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa',\n","       'Dummy Gym'], dtype=object)"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"ajePwZuinTGJ","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1637091955066,"user_tz":360,"elapsed":332,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"bcc8a224-4b45-443f-d8d9-9d9c6cd559fe"},"source":["from sklearn.metrics import confusion_matrix\n","\n","# Confusion matrix function makes easy work of obtaining matrix\n","mat = confusion_matrix(ytrue, y_pred)\n","\n","# Use seaborn to make a heatmap of the confusion matrix\n","sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False,\n","            xticklabels=model.classes_, yticklabels=model.classes_, cmap=plt.cm.BuPu)\n","plt.xlabel('true label')\n","plt.ylabel('predicted label');"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"eowgPhJ9tlTn","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1637094997001,"user_tz":360,"elapsed":256,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"bee3a8bb-4d68-4439-8f51-6fe59596f529"},"source":["from sklearn.metrics import confusion_matrix\n","\n","# Confusion matrix function makes easy work of obtaining matrix\n","mat = confusion_matrix(ytrue, y_pred)\n","\n","# Use seaborn to make a heatmap of the confusion matrix\n","sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False,\n","            xticklabels=model.classes_, yticklabels=model.classes_, cmap=plt.cm.BuPu)\n","plt.xlabel('true label')\n","plt.ylabel('predicted label');"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"_UyZ-fPGntGK"},"source":["# Over Sampling the Data"]},{"cell_type":"code","metadata":{"id":"60Gvo3ijnyxo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637094971050,"user_tz":360,"elapsed":111,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"429a8a4e-e2bc-4345-8dd5-82a17e28cd5f"},"source":["features = df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']]\n","target = df['Score']\n","\n","xtrain, xtest, ytrain, ytrue = train_test_split(features, target)\n","\n","ros = RandomOverSampler()#random_state=42)\n","X_resampled, y_resampled = ros.fit_resample(xtrain, ytrain)\n","\n","model = DecisionTreeClassifier()#random_state=5)\n","\n","model.fit(X_resampled, y_resampled)\n","\n","y_pred = model.predict(xtest)\n","\n","model_validation(ytrue, y_pred)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.15079365079365079\n","Precision Score: 0.13609920134510298\n","Recall Score: 0.23694749694749695\n","F1 Score: 0.13943803702317634\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XeeFel2vdBlX","executionInfo":{"status":"ok","timestamp":1637094993976,"user_tz":360,"elapsed":394,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"b0273f69-e1fd-4fdf-e49b-914072ca577d"},"source":["features = df[['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa', 'Dummy Gym']]\n","target = df['Score']\n","\n","xtrain, xtest, ytrain, ytrue = train_test_split(features, target)\n","\n","ros = RandomOverSampler()#random_state=42)\n","X_resampled, y_resampled = ros.fit_resample(xtrain, ytrain)\n","\n","m = np.int64(np.sqrt(features.shape[1]))\n","print(m)\n","\n","# Set up our Random Forest\n","random_forest = RandomForestClassifier(max_samples=0.75, oob_score=True)\n","random_forest.fit(X_resampled, y_resampled)\n","\n","y_pred = random_forest.predict(xtest)\n","\n","model_validation(ytrue, y_pred)\n","\n","random_forest.feature_names_in_"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","Accuracy Score: 0.40476190476190477\n","Precision Score: 0.31986967418546364\n","Recall Score: 0.3013602693602694\n","F1 Score: 0.2763195797678556\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:446: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]},{"output_type":"execute_result","data":{"text/plain":["array(['Hotel stars', 'Dummy Pool', 'Dummy Free Internet', 'Dummy Spa',\n","       'Dummy Gym'], dtype=object)"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"K8OXpeYqotuM"},"source":["from imblearn.over_sampling import RandomOverSampler, SMOTE\n","from imblearn.under_sampling import RandomUnderSampler\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn import metrics\n","from sklearn.utils import class_weight"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"e8qc8qp9q1l8"},"source":["# Under Sampling"]},{"cell_type":"code","metadata":{"id":"ra1p-XWqpIFm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637081817770,"user_tz":360,"elapsed":166,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"ae22a49a-cb69-43ff-ef8e-10b803b028cb"},"source":["# logistic regression object\n","lr = LogisticRegression()\n"," \n","# train the model on train set\n","lr.fit(xtrain, ytrain.ravel())\n"," \n","predictions = lr.predict(xtest)\n"," \n","# print classification report\n","print(metrics.classification_report(ytrue, predictions))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         5\n","           2       0.00      0.00      0.00        11\n","           3       0.00      0.00      0.00        18\n","           4       0.22      0.25      0.24        32\n","           5       0.51      0.77      0.61        60\n","\n","    accuracy                           0.43       126\n","   macro avg       0.15      0.20      0.17       126\n","weighted avg       0.30      0.43      0.35       126\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"id":"aVdrEohEp7-4"},"source":["sm = SMOTE(sampling_strategy='minority', random_state = 2)\n","xtrain_res, ytrain_res = sm.fit_resample(xtrain, ytrain)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_rbLxJi_qEpV"},"source":["print(xtrain_res.shape)\n","print(ytrain_res.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6B18fqvyqJDX"},"source":["lr1 = LogisticRegression()\n","lr1.fit(xtrain_res, ytrain_res)\n","predictions = lr1.predict(xtest)\n"," \n","# print classification report\n","print(metrics.classification_report(ytest, predictions))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YKVaLVXfqi4U"},"source":["predictions = (lr1.predict_proba(xtest)[:,1]>=0.7).astype(int)\n"," \n","# print classification report\n","print(metrics.classification_report(ytest, predictions))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-vV5eGpfrCQM"},"source":["# Ada Boost"]},{"cell_type":"code","metadata":{"id":"EhD6DQ6Uq5NU"},"source":["adaboost = AdaBoostClassifier(base_estimator=RandomForestClassifier(max_features=m, max_samples=.75),\n","                              learning_rate=.1, n_estimators=25, random_state=1)\n","\n","adaboost.fit(xtrain, ytrain)\n","\n","y_pred = adaboost.predict(xtest)\n","\n","model_validation(ytest, y_pred)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n3ERqE4tXpe_"},"source":["# Part 4 Modelling"]},{"cell_type":"code","metadata":{"id":"oqaiS4ubrTgT"},"source":["df = pd.read_csv('Cleaned_Weightless_Numerical_Data.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"kE3i_FS0X790","executionInfo":{"status":"ok","timestamp":1638388902275,"user_tz":360,"elapsed":263,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"0f002aed-ed1a-4716-88ec-77dc0853a1df"},"source":["df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X</th>\n","      <th>Nr..reviews</th>\n","      <th>Nr..hotel.reviews</th>\n","      <th>Helpful.votes</th>\n","      <th>Score</th>\n","      <th>Hotel.stars</th>\n","      <th>Nr..rooms</th>\n","      <th>Member.years</th>\n","      <th>Dummy.Pool</th>\n","      <th>Dummy.Gym</th>\n","      <th>Dummy.Tennis</th>\n","      <th>Dummy.Spa</th>\n","      <th>Dummy.Casino</th>\n","      <th>Dummy.Free.Internet</th>\n","      <th>Africa</th>\n","      <th>Asia</th>\n","      <th>Europe</th>\n","      <th>North.America</th>\n","      <th>Oceania</th>\n","      <th>South.America</th>\n","      <th>Business</th>\n","      <th>Couples</th>\n","      <th>Families</th>\n","      <th>Friends</th>\n","      <th>Solo</th>\n","      <th>Australia</th>\n","      <th>Belgium</th>\n","      <th>Brazil</th>\n","      <th>Canada</th>\n","      <th>China</th>\n","      <th>Costa.Rica</th>\n","      <th>Croatia</th>\n","      <th>Czech.Republic</th>\n","      <th>Denmark</th>\n","      <th>Egypt</th>\n","      <th>Finland</th>\n","      <th>France</th>\n","      <th>Germany</th>\n","      <th>Greece</th>\n","      <th>Hawaii</th>\n","      <th>...</th>\n","      <th>Bellagio.Las.Vegas</th>\n","      <th>Caesars.Palace</th>\n","      <th>Circus.Circus.Hotel...Casino.Las.Vegas</th>\n","      <th>Encore.at.wynn.Las.Vegas</th>\n","      <th>Excalibur.Hotel...Casino</th>\n","      <th>Hilton.Grand.Vacations.at.the.Flamingo</th>\n","      <th>Hilton.Grand.Vacations.on.the.Boulevard</th>\n","      <th>Marriott.s.Grand.Chateau</th>\n","      <th>Monte.Carlo.Resort.Casino</th>\n","      <th>Paris.Las.Vegas</th>\n","      <th>The.Cosmopolitan.Las.Vegas</th>\n","      <th>The.Cromwell</th>\n","      <th>The.Palazzo.Resort.Hotel.Casino</th>\n","      <th>The.Venetian.Las.Vegas.Hotel</th>\n","      <th>The.Westin.las.Vegas.Hotel.Casino...Spa</th>\n","      <th>Treasure.Island..TI.Hotel...Casino</th>\n","      <th>Tropicana.Las.Vegas...A.Double.Tree.by.Hilton.Hotel</th>\n","      <th>Trump.International.Hotel.Las.Vegas</th>\n","      <th>Tuscany.Las.Vegas.Suites...Casino</th>\n","      <th>Wyndham.Grand.Desert</th>\n","      <th>Wynn.Las.Vegas</th>\n","      <th>April</th>\n","      <th>August</th>\n","      <th>December</th>\n","      <th>February</th>\n","      <th>January</th>\n","      <th>July</th>\n","      <th>June</th>\n","      <th>March</th>\n","      <th>May</th>\n","      <th>November</th>\n","      <th>October</th>\n","      <th>September</th>\n","      <th>Friday</th>\n","      <th>Monday</th>\n","      <th>Saturday</th>\n","      <th>Sunday</th>\n","      <th>Thursday</th>\n","      <th>Tuesday</th>\n","      <th>Wednesday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>119</td>\n","      <td>21</td>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>36</td>\n","      <td>9</td>\n","      <td>25</td>\n","      <td>5</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>3773</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>50</td>\n","      <td>13</td>\n","      <td>29</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>501</td>\n","      <td>154</td>\n","      <td>23</td>\n","      <td>31</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>502</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>503</td>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>112</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>826</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows Ã— 117 columns</p>\n","</div>"],"text/plain":["       X  Nr..reviews  Nr..hotel.reviews  ...  Thursday  Tuesday  Wednesday\n","0      0           11                  4  ...         1        0          0\n","1      1          119                 21  ...         0        0          0\n","2      2           36                  9  ...         0        0          0\n","3      3           14                  7  ...         0        0          0\n","4      4            5                  5  ...         0        1          0\n","..   ...          ...                ...  ...       ...      ...        ...\n","499  499           15                  4  ...         0        0          0\n","500  500           50                 13  ...         1        0          0\n","501  501          154                 23  ...         1        0          0\n","502  502            9                  6  ...         0        0          1\n","503  503           20                 19  ...         0        1          0\n","\n","[504 rows x 117 columns]"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"mzRe7uNzYC4D"},"source":["xtrain, xtest, ytrain, ytest = train_test_split(df[['Dummy.Pool', 'Dummy.Free.Internet', 'Saturday', 'China', 'Business','Excalibur.Hotel...Casino']], df['Score'],train_size=0.8)\n","\n","# Initialize our decision tree object\n","classification_tree = DecisionTreeClassifier()\n","\n","# Train our decision tree (tree induction + pruning)\n","classification_tree = classification_tree.fit(xtrain, ytrain)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HiLrXusNkYVe"},"source":["# Decision Tree"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":936},"id":"aDMsNo8mYo1i","executionInfo":{"status":"ok","timestamp":1638301656054,"user_tz":360,"elapsed":290,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"4377dde7-1aa6-4eda-d782-e7a710276a53"},"source":["dot_data = export_graphviz(classification_tree, out_file=None,  \n","                           feature_names = ['Dummy.Pool', 'Dummy.Free.Internet', 'Saturday', 'China', 'Business','Excalibur.Hotel...Casino'],  \n","                           class_names = ['1','2','3','4','5'], \n","                           filled=True, rounded=True,  \n","                           special_characters=True)  \n","graph = graphviz.Source(dot_data)\n","graph\n","\n","#graph.render(\"Model DT\", view=True) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<graphviz.files.Source at 0x7f2d2f1d2ad0>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"1865pt\" height=\"671pt\"\n viewBox=\"0.00 0.00 1865.00 671.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 667)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-667 1861,-667 1861,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#fbdef4\" stroke=\"#000000\" d=\"M720,-663C720,-663 548,-663 548,-663 542,-663 536,-657 536,-651 536,-651 536,-592 536,-592 536,-586 542,-580 548,-580 548,-580 720,-580 720,-580 726,-580 732,-586 732,-592 732,-592 732,-651 732,-651 732,-657 726,-663 720,-663\"/>\n<text text-anchor=\"start\" x=\"548\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy.Free.Internet â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"600.5\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.67</text>\n<text text-anchor=\"start\" x=\"586\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 403</text>\n<text text-anchor=\"start\" x=\"544\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 25, 59, 133, 178]</text>\n<text text-anchor=\"start\" x=\"605\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#d5d5f9\" stroke=\"#000000\" d=\"M531,-544C531,-544 409,-544 409,-544 403,-544 397,-538 397,-532 397,-532 397,-473 397,-473 397,-467 403,-461 409,-461 409,-461 531,-461 531,-461 537,-461 543,-467 543,-473 543,-473 543,-532 543,-532 543,-538 537,-544 531,-544\"/>\n<text text-anchor=\"start\" x=\"422\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Business â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"432\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.704</text>\n<text text-anchor=\"start\" x=\"426\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 19</text>\n<text text-anchor=\"start\" x=\"405\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 4, 5, 8, 1]</text>\n<text text-anchor=\"start\" x=\"441\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M576.6408,-579.8796C563.4075,-570.2774 549.2303,-559.9903 535.6736,-550.1534\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"537.4762,-547.1371 527.3269,-544.0969 533.3651,-552.8027 537.4762,-547.1371\"/>\n<text text-anchor=\"middle\" x=\"531.2528\" y=\"-565.0867\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<path fill=\"#fad7f2\" stroke=\"#000000\" d=\"M894,-544C894,-544 722,-544 722,-544 716,-544 710,-538 710,-532 710,-532 710,-473 710,-473 710,-467 716,-461 722,-461 722,-461 894,-461 894,-461 900,-461 906,-467 906,-473 906,-473 906,-532 906,-532 906,-538 900,-544 894,-544\"/>\n<text text-anchor=\"start\" x=\"749\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dummy.Pool â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"770\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.658</text>\n<text text-anchor=\"start\" x=\"760\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 384</text>\n<text text-anchor=\"start\" x=\"718\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [7, 21, 54, 125, 177]</text>\n<text text-anchor=\"start\" x=\"779\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 0&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>0&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M694.8568,-579.8796C709.0294,-570.1868 724.2225,-559.7961 738.7288,-549.8752\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"740.8992,-552.6311 747.1776,-544.0969 736.9475,-546.8531 740.8992,-552.6311\"/>\n<text text-anchor=\"middle\" x=\"742.5653\" y=\"-564.9678\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<path fill=\"#cac9f8\" stroke=\"#000000\" d=\"M298,-425C298,-425 176,-425 176,-425 170,-425 164,-419 164,-413 164,-413 164,-354 164,-354 164,-348 170,-342 176,-342 176,-342 298,-342 298,-342 304,-342 310,-348 310,-354 310,-354 310,-413 310,-413 310,-419 304,-425 298,-425\"/>\n<text text-anchor=\"start\" x=\"190\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Saturday â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"199\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.633</text>\n<text text-anchor=\"start\" x=\"193\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"start\" x=\"172\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 5, 8, 1]</text>\n<text text-anchor=\"start\" x=\"208\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M396.9166,-465.1742C372.3121,-452.6079 344.6926,-438.5018 319.4194,-425.594\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"320.722,-422.3293 310.2243,-420.8978 317.5381,-428.5633 320.722,-422.3293\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<path fill=\"#bdf29c\" stroke=\"#000000\" d=\"M531,-425C531,-425 409,-425 409,-425 403,-425 397,-419 397,-413 397,-413 397,-354 397,-354 397,-348 403,-342 409,-342 409,-342 531,-342 531,-342 537,-342 543,-348 543,-354 543,-354 543,-413 543,-413 543,-419 537,-425 531,-425\"/>\n<text text-anchor=\"start\" x=\"433\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">China â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"432\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"start\" x=\"430.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"start\" x=\"405\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 2, 0, 0, 0]</text>\n<text text-anchor=\"start\" x=\"441\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 2</text>\n</g>\n<!-- 1&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>1&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M470,-460.8796C470,-452.6838 470,-443.9891 470,-435.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"473.5001,-435.298 470,-425.2981 466.5001,-435.2981 473.5001,-435.298\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<path fill=\"#b8b7f6\" stroke=\"#000000\" d=\"M134,-298.5C134,-298.5 12,-298.5 12,-298.5 6,-298.5 0,-292.5 0,-286.5 0,-286.5 0,-242.5 0,-242.5 0,-236.5 6,-230.5 12,-230.5 12,-230.5 134,-230.5 134,-230.5 140,-230.5 146,-236.5 146,-242.5 146,-242.5 146,-286.5 146,-286.5 146,-292.5 140,-298.5 134,-298.5\"/>\n<text text-anchor=\"start\" x=\"35\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.622</text>\n<text text-anchor=\"start\" x=\"29\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 15</text>\n<text text-anchor=\"start\" x=\"8\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 4, 8, 1]</text>\n<text text-anchor=\"start\" x=\"44\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M179.6408,-341.8796C163.0439,-329.8368 144.9625,-316.7167 128.4824,-304.7586\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"130.176,-301.6632 120.0267,-298.623 126.0649,-307.3288 130.176,-301.6632\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<path fill=\"#39e5c5\" stroke=\"#000000\" d=\"M298,-298.5C298,-298.5 176,-298.5 176,-298.5 170,-298.5 164,-292.5 164,-286.5 164,-286.5 164,-242.5 164,-242.5 164,-236.5 170,-230.5 176,-230.5 176,-230.5 298,-230.5 298,-230.5 304,-230.5 310,-236.5 310,-242.5 310,-242.5 310,-286.5 310,-286.5 310,-292.5 304,-298.5 298,-298.5\"/>\n<text text-anchor=\"start\" x=\"207.5\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"start\" x=\"197.5\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"start\" x=\"172\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1, 0, 0]</text>\n<text text-anchor=\"start\" x=\"208\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 3</text>\n</g>\n<!-- 2&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>2&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M237,-341.8796C237,-331.2134 237,-319.7021 237,-308.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"240.5001,-308.8149 237,-298.8149 233.5001,-308.815 240.5001,-308.8149\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<path fill=\"#7be539\" stroke=\"#000000\" d=\"M462,-298.5C462,-298.5 340,-298.5 340,-298.5 334,-298.5 328,-292.5 328,-286.5 328,-286.5 328,-242.5 328,-242.5 328,-236.5 334,-230.5 340,-230.5 340,-230.5 462,-230.5 462,-230.5 468,-230.5 474,-236.5 474,-242.5 474,-242.5 474,-286.5 474,-286.5 474,-292.5 468,-298.5 462,-298.5\"/>\n<text text-anchor=\"start\" x=\"371.5\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"start\" x=\"361.5\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"start\" x=\"336\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 0, 0, 0]</text>\n<text text-anchor=\"start\" x=\"372\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 2</text>\n</g>\n<!-- 5&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>5&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M445.8671,-341.8796C439.4275,-330.7735 432.4566,-318.7513 425.9729,-307.5691\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"428.9409,-305.7102 420.8969,-298.8149 422.8852,-309.2215 428.9409,-305.7102\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<path fill=\"#e58139\" stroke=\"#000000\" d=\"M626,-298.5C626,-298.5 504,-298.5 504,-298.5 498,-298.5 492,-292.5 492,-286.5 492,-286.5 492,-242.5 492,-242.5 492,-236.5 498,-230.5 504,-230.5 504,-230.5 626,-230.5 626,-230.5 632,-230.5 638,-236.5 638,-242.5 638,-242.5 638,-286.5 638,-286.5 638,-292.5 632,-298.5 626,-298.5\"/>\n<text text-anchor=\"start\" x=\"535.5\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"start\" x=\"525.5\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"start\" x=\"500\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0, 0, 0, 0]</text>\n<text text-anchor=\"start\" x=\"536\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 5&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>5&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M503.2264,-341.8796C512.2681,-330.5536 522.0705,-318.2748 531.1466,-306.9058\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"534.102,-308.8137 537.6057,-298.8149 528.6315,-304.4464 534.102,-308.8137\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<path fill=\"#efeefd\" stroke=\"#000000\" d=\"M869,-425C869,-425 747,-425 747,-425 741,-425 735,-419 735,-413 735,-413 735,-354 735,-354 735,-348 741,-342 747,-342 747,-342 869,-342 869,-342 875,-342 881,-348 881,-354 881,-354 881,-413 881,-413 881,-419 875,-425 869,-425\"/>\n<text text-anchor=\"start\" x=\"761\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Saturday â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"774.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.74</text>\n<text text-anchor=\"start\" x=\"764\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 17</text>\n<text text-anchor=\"start\" x=\"743\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 3, 5, 6, 2]</text>\n<text text-anchor=\"start\" x=\"779\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 8&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>8&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M808,-460.8796C808,-452.6838 808,-443.9891 808,-435.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"811.5001,-435.298 808,-425.2981 804.5001,-435.2981 811.5001,-435.298\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<path fill=\"#f9d2f1\" stroke=\"#000000\" d=\"M1173,-425C1173,-425 991,-425 991,-425 985,-425 979,-419 979,-413 979,-413 979,-354 979,-354 979,-348 985,-342 991,-342 991,-342 1173,-342 1173,-342 1179,-342 1185,-348 1185,-354 1185,-354 1185,-413 1185,-413 1185,-419 1179,-425 1173,-425\"/>\n<text text-anchor=\"start\" x=\"987\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Excalibur.Hotel...Casino â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"1044\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.647</text>\n<text text-anchor=\"start\" x=\"1034\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 367</text>\n<text text-anchor=\"start\" x=\"992\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 18, 49, 119, 175]</text>\n<text text-anchor=\"start\" x=\"1053\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 8&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>8&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M903.8319,-460.8796C927.4012,-450.6433 952.7626,-439.6286 976.7498,-429.2108\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"978.4442,-432.2909 986.2222,-425.0969 975.6556,-425.8703 978.4442,-432.2909\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<path fill=\"#e9fcf9\" stroke=\"#000000\" d=\"M790,-298.5C790,-298.5 668,-298.5 668,-298.5 662,-298.5 656,-292.5 656,-286.5 656,-286.5 656,-242.5 656,-242.5 656,-236.5 662,-230.5 668,-230.5 668,-230.5 790,-230.5 790,-230.5 796,-230.5 802,-236.5 802,-242.5 802,-242.5 802,-286.5 802,-286.5 802,-292.5 796,-298.5 790,-298.5\"/>\n<text text-anchor=\"start\" x=\"695.5\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.75</text>\n<text text-anchor=\"start\" x=\"685\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 12</text>\n<text text-anchor=\"start\" x=\"664\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 3, 4, 3, 1]</text>\n<text text-anchor=\"start\" x=\"700\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 3</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M780.3696,-341.8796C772.9237,-330.6636 764.8575,-318.5131 757.3718,-307.2372\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"760.2273,-305.2104 751.7805,-298.8149 754.3954,-309.082 760.2273,-305.2104\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<path fill=\"#9e9cf2\" stroke=\"#000000\" d=\"M954,-298.5C954,-298.5 832,-298.5 832,-298.5 826,-298.5 820,-292.5 820,-286.5 820,-286.5 820,-242.5 820,-242.5 820,-236.5 826,-230.5 832,-230.5 832,-230.5 954,-230.5 954,-230.5 960,-230.5 966,-236.5 966,-242.5 966,-242.5 966,-286.5 966,-286.5 966,-292.5 960,-298.5 954,-298.5\"/>\n<text text-anchor=\"start\" x=\"859.5\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.56</text>\n<text text-anchor=\"start\" x=\"853.5\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n<text text-anchor=\"start\" x=\"828\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1, 3, 1]</text>\n<text text-anchor=\"start\" x=\"864\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 9&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>9&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M837.7289,-341.8796C845.7403,-330.6636 854.4192,-318.5131 862.4734,-307.2372\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"865.525,-308.9866 868.4893,-298.8149 859.8288,-304.9179 865.525,-308.9866\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<path fill=\"#f8ccef\" stroke=\"#000000\" d=\"M1168,-306C1168,-306 996,-306 996,-306 990,-306 984,-300 984,-294 984,-294 984,-235 984,-235 984,-229 990,-223 996,-223 996,-223 1168,-223 1168,-223 1174,-223 1180,-229 1180,-235 1180,-235 1180,-294 1180,-294 1180,-300 1174,-306 1168,-306\"/>\n<text text-anchor=\"start\" x=\"1034\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Business â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"1044\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.637</text>\n<text text-anchor=\"start\" x=\"1034\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 346</text>\n<text text-anchor=\"start\" x=\"992\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 17, 42, 110, 171]</text>\n<text text-anchor=\"start\" x=\"1053\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 12&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>12&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1082,-341.8796C1082,-333.6838 1082,-324.9891 1082,-316.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1085.5001,-316.298 1082,-306.2981 1078.5001,-316.2981 1085.5001,-316.298\"/>\n</g>\n<!-- 20 -->\n<g id=\"node21\" class=\"node\">\n<title>20</title>\n<path fill=\"#e3e3fb\" stroke=\"#000000\" d=\"M1399,-306C1399,-306 1277,-306 1277,-306 1271,-306 1265,-300 1265,-294 1265,-294 1265,-235 1265,-235 1265,-229 1271,-223 1277,-223 1277,-223 1399,-223 1399,-223 1405,-223 1411,-229 1411,-235 1411,-235 1411,-294 1411,-294 1411,-300 1405,-306 1399,-306\"/>\n<text text-anchor=\"start\" x=\"1291\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Saturday â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"1300\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.667</text>\n<text text-anchor=\"start\" x=\"1294\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 21</text>\n<text text-anchor=\"start\" x=\"1273\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 7, 9, 4]</text>\n<text text-anchor=\"start\" x=\"1309\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 12&#45;&gt;20 -->\n<g id=\"edge20\" class=\"edge\">\n<title>12&#45;&gt;20</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1171.5364,-341.8796C1198.7508,-329.2291 1228.5226,-315.3899 1255.2678,-302.9576\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1256.9997,-306.0122 1264.5925,-298.623 1254.0489,-299.6645 1256.9997,-306.0122\"/>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<path fill=\"#f7c3ec\" stroke=\"#000000\" d=\"M856,-187C856,-187 692,-187 692,-187 686,-187 680,-181 680,-175 680,-175 680,-116 680,-116 680,-110 686,-104 692,-104 692,-104 856,-104 856,-104 862,-104 868,-110 868,-116 868,-116 868,-175 868,-175 868,-181 862,-187 856,-187\"/>\n<text text-anchor=\"start\" x=\"727\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Saturday â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"736\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.626</text>\n<text text-anchor=\"start\" x=\"726\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 293</text>\n<text text-anchor=\"start\" x=\"688\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 15, 34, 89, 151]</text>\n<text text-anchor=\"start\" x=\"745\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 13&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>13&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M983.7559,-226.3873C980.8043,-225.245 977.8804,-224.1139 975,-223 943.3877,-210.7752 908.9681,-197.4934 877.6904,-185.4351\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"878.6807,-182.0658 868.091,-181.7346 876.1628,-188.5973 878.6807,-182.0658\"/>\n</g>\n<!-- 17 -->\n<g id=\"node18\" class=\"node\">\n<title>17</title>\n<path fill=\"#f9f9fe\" stroke=\"#000000\" d=\"M1151.5,-187C1151.5,-187 1012.5,-187 1012.5,-187 1006.5,-187 1000.5,-181 1000.5,-175 1000.5,-175 1000.5,-116 1000.5,-116 1000.5,-110 1006.5,-104 1012.5,-104 1012.5,-104 1151.5,-104 1151.5,-104 1157.5,-104 1163.5,-110 1163.5,-116 1163.5,-116 1163.5,-175 1163.5,-175 1163.5,-181 1157.5,-187 1151.5,-187\"/>\n<text text-anchor=\"start\" x=\"1035\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Saturday â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"1044\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.675</text>\n<text text-anchor=\"start\" x=\"1038\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 53</text>\n<text text-anchor=\"start\" x=\"1008.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 2, 8, 21, 20]</text>\n<text text-anchor=\"start\" x=\"1053\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 13&#45;&gt;17 -->\n<g id=\"edge17\" class=\"edge\">\n<title>13&#45;&gt;17</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1082,-222.8796C1082,-214.6838 1082,-205.9891 1082,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1085.5001,-197.298 1082,-187.2981 1078.5001,-197.2981 1085.5001,-197.298\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<path fill=\"#f7c4ec\" stroke=\"#000000\" d=\"M662,-68C662,-68 498,-68 498,-68 492,-68 486,-62 486,-56 486,-56 486,-12 486,-12 486,-6 492,0 498,0 498,0 662,0 662,0 668,0 674,-6 674,-12 674,-12 674,-56 674,-56 674,-62 668,-68 662,-68\"/>\n<text text-anchor=\"start\" x=\"542\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.636</text>\n<text text-anchor=\"start\" x=\"532\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 265</text>\n<text text-anchor=\"start\" x=\"494\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 14, 34, 79, 134]</text>\n<text text-anchor=\"start\" x=\"551\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 14&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>14&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M701.7616,-103.9815C684.2397,-93.911 665.5626,-83.1764 648.2324,-73.2161\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"649.7201,-70.0342 639.3059,-68.0856 646.2319,-76.1032 649.7201,-70.0342\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<path fill=\"#f5b2e6\" stroke=\"#000000\" d=\"M843.5,-68C843.5,-68 704.5,-68 704.5,-68 698.5,-68 692.5,-62 692.5,-56 692.5,-56 692.5,-12 692.5,-12 692.5,-6 698.5,0 704.5,0 704.5,0 843.5,0 843.5,0 849.5,0 855.5,-6 855.5,-12 855.5,-12 855.5,-56 855.5,-56 855.5,-62 849.5,-68 843.5,-68\"/>\n<text text-anchor=\"start\" x=\"736\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.503</text>\n<text text-anchor=\"start\" x=\"730\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 28</text>\n<text text-anchor=\"start\" x=\"700.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 0, 10, 17]</text>\n<text text-anchor=\"start\" x=\"745\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 14&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>14&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M774,-103.9815C774,-95.618 774,-86.7965 774,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"777.5001,-78.2636 774,-68.2637 770.5001,-78.2637 777.5001,-78.2636\"/>\n</g>\n<!-- 18 -->\n<g id=\"node19\" class=\"node\">\n<title>18</title>\n<path fill=\"#fef8fd\" stroke=\"#000000\" d=\"M1024.5,-68C1024.5,-68 885.5,-68 885.5,-68 879.5,-68 873.5,-62 873.5,-56 873.5,-56 873.5,-12 873.5,-12 873.5,-6 879.5,0 885.5,0 885.5,0 1024.5,0 1024.5,0 1030.5,0 1036.5,-6 1036.5,-12 1036.5,-12 1036.5,-56 1036.5,-56 1036.5,-62 1030.5,-68 1024.5,-68\"/>\n<text text-anchor=\"start\" x=\"921.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.69</text>\n<text text-anchor=\"start\" x=\"911\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 47</text>\n<text text-anchor=\"start\" x=\"881.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 2, 8, 17, 18]</text>\n<text text-anchor=\"start\" x=\"926\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 5</text>\n</g>\n<!-- 17&#45;&gt;18 -->\n<g id=\"edge18\" class=\"edge\">\n<title>17&#45;&gt;18</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1034.7099,-103.9815C1023.9275,-94.5151 1012.477,-84.462 1001.7187,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1003.8507,-72.2311 994.0268,-68.2637 999.2324,-77.4915 1003.8507,-72.2311\"/>\n</g>\n<!-- 19 -->\n<g id=\"node20\" class=\"node\">\n<title>19</title>\n<path fill=\"#9e9cf2\" stroke=\"#000000\" d=\"M1189,-68C1189,-68 1067,-68 1067,-68 1061,-68 1055,-62 1055,-56 1055,-56 1055,-12 1055,-12 1055,-6 1061,0 1067,0 1067,0 1189,0 1189,0 1195,0 1201,-6 1201,-12 1201,-12 1201,-56 1201,-56 1201,-62 1195,-68 1189,-68\"/>\n<text text-anchor=\"start\" x=\"1090\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"start\" x=\"1088.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n<text text-anchor=\"start\" x=\"1063\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 0, 4, 2]</text>\n<text text-anchor=\"start\" x=\"1099\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 17&#45;&gt;19 -->\n<g id=\"edge19\" class=\"edge\">\n<title>17&#45;&gt;19</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1099.1287,-103.9815C1102.655,-95.4342 1106.3785,-86.4086 1109.9367,-77.7839\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1113.286,-78.8427 1113.8643,-68.2637 1106.815,-76.1731 1113.286,-78.8427\"/>\n</g>\n<!-- 21 -->\n<g id=\"node22\" class=\"node\">\n<title>21</title>\n<path fill=\"#cecef8\" stroke=\"#000000\" d=\"M1399,-187C1399,-187 1277,-187 1277,-187 1271,-187 1265,-181 1265,-175 1265,-175 1265,-116 1265,-116 1265,-110 1271,-104 1277,-104 1277,-104 1399,-104 1399,-104 1405,-104 1411,-110 1411,-116 1411,-116 1411,-175 1411,-175 1411,-181 1405,-187 1399,-187\"/>\n<text text-anchor=\"start\" x=\"1290\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Business â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"1304.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.68</text>\n<text text-anchor=\"start\" x=\"1294\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"start\" x=\"1273\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 4, 7, 4]</text>\n<text text-anchor=\"start\" x=\"1309\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 20&#45;&gt;21 -->\n<g id=\"edge21\" class=\"edge\">\n<title>20&#45;&gt;21</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1338,-222.8796C1338,-214.6838 1338,-205.9891 1338,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1341.5001,-197.298 1338,-187.2981 1334.5001,-197.2981 1341.5001,-197.298\"/>\n</g>\n<!-- 24 -->\n<g id=\"node25\" class=\"node\">\n<title>24</title>\n<path fill=\"#bdf6ec\" stroke=\"#000000\" d=\"M1681,-187C1681,-187 1559,-187 1559,-187 1553,-187 1547,-181 1547,-175 1547,-175 1547,-116 1547,-116 1547,-110 1553,-104 1559,-104 1559,-104 1681,-104 1681,-104 1687,-104 1693,-110 1693,-116 1693,-116 1693,-175 1693,-175 1693,-181 1687,-187 1681,-187\"/>\n<text text-anchor=\"start\" x=\"1572\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Business â‰¤ 0.5</text>\n<text text-anchor=\"start\" x=\"1586.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.48</text>\n<text text-anchor=\"start\" x=\"1580.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n<text text-anchor=\"start\" x=\"1555\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 3, 2, 0]</text>\n<text text-anchor=\"start\" x=\"1591\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 3</text>\n</g>\n<!-- 20&#45;&gt;24 -->\n<g id=\"edge24\" class=\"edge\">\n<title>20&#45;&gt;24</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1411.356,-233.5448C1449.8819,-217.2874 1497.2377,-197.304 1537.0902,-180.4868\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1538.6694,-183.6193 1546.5219,-176.5067 1535.9479,-177.17 1538.6694,-183.6193\"/>\n</g>\n<!-- 22 -->\n<g id=\"node23\" class=\"node\">\n<title>22</title>\n<path fill=\"#c4c4f7\" stroke=\"#000000\" d=\"M1353,-68C1353,-68 1231,-68 1231,-68 1225,-68 1219,-62 1219,-56 1219,-56 1219,-12 1219,-12 1219,-6 1225,0 1231,0 1231,0 1353,0 1353,0 1359,0 1365,-6 1365,-12 1365,-12 1365,-56 1365,-56 1365,-62 1359,-68 1353,-68\"/>\n<text text-anchor=\"start\" x=\"1254\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.643</text>\n<text text-anchor=\"start\" x=\"1248\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 14</text>\n<text text-anchor=\"start\" x=\"1227\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 2, 7, 4]</text>\n<text text-anchor=\"start\" x=\"1263\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 21&#45;&gt;22 -->\n<g id=\"edge22\" class=\"edge\">\n<title>21&#45;&gt;22</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1320.8713,-103.9815C1317.345,-95.4342 1313.6215,-86.4086 1310.0633,-77.7839\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1313.185,-76.1731 1306.1357,-68.2637 1306.714,-78.8427 1313.185,-76.1731\"/>\n</g>\n<!-- 23 -->\n<g id=\"node24\" class=\"node\">\n<title>23</title>\n<path fill=\"#39e5c5\" stroke=\"#000000\" d=\"M1517,-68C1517,-68 1395,-68 1395,-68 1389,-68 1383,-62 1383,-56 1383,-56 1383,-12 1383,-12 1383,-6 1389,0 1395,0 1395,0 1517,0 1517,0 1523,0 1529,-6 1529,-12 1529,-12 1529,-56 1529,-56 1529,-62 1523,-68 1517,-68\"/>\n<text text-anchor=\"start\" x=\"1426.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"start\" x=\"1416.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"start\" x=\"1391\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 2, 0, 0]</text>\n<text text-anchor=\"start\" x=\"1427\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 3</text>\n</g>\n<!-- 21&#45;&gt;23 -->\n<g id=\"edge23\" class=\"edge\">\n<title>21&#45;&gt;23</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1381.9388,-103.9815C1391.8598,-94.607 1402.3897,-84.6572 1412.3008,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1414.8743,-77.6757 1419.7389,-68.2637 1410.0666,-72.5878 1414.8743,-77.6757\"/>\n</g>\n<!-- 25 -->\n<g id=\"node26\" class=\"node\">\n<title>25</title>\n<path fill=\"#7beed8\" stroke=\"#000000\" d=\"M1681,-68C1681,-68 1559,-68 1559,-68 1553,-68 1547,-62 1547,-56 1547,-56 1547,-12 1547,-12 1547,-6 1553,0 1559,0 1559,0 1681,0 1681,0 1687,0 1693,-6 1693,-12 1693,-12 1693,-56 1693,-56 1693,-62 1687,-68 1681,-68\"/>\n<text text-anchor=\"start\" x=\"1582\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.375</text>\n<text text-anchor=\"start\" x=\"1580.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n<text text-anchor=\"start\" x=\"1555\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 3, 1, 0]</text>\n<text text-anchor=\"start\" x=\"1591\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 3</text>\n</g>\n<!-- 24&#45;&gt;25 -->\n<g id=\"edge25\" class=\"edge\">\n<title>24&#45;&gt;25</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1620,-103.9815C1620,-95.618 1620,-86.7965 1620,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1623.5001,-78.2636 1620,-68.2637 1616.5001,-78.2637 1623.5001,-78.2636\"/>\n</g>\n<!-- 26 -->\n<g id=\"node27\" class=\"node\">\n<title>26</title>\n<path fill=\"#3c39e5\" stroke=\"#000000\" d=\"M1845,-68C1845,-68 1723,-68 1723,-68 1717,-68 1711,-62 1711,-56 1711,-56 1711,-12 1711,-12 1711,-6 1717,0 1723,0 1723,0 1845,0 1845,0 1851,0 1857,-6 1857,-12 1857,-12 1857,-56 1857,-56 1857,-62 1851,-68 1845,-68\"/>\n<text text-anchor=\"start\" x=\"1754.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"start\" x=\"1744.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"start\" x=\"1719\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 0, 1, 0]</text>\n<text text-anchor=\"start\" x=\"1755\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 4</text>\n</g>\n<!-- 24&#45;&gt;26 -->\n<g id=\"edge26\" class=\"edge\">\n<title>24&#45;&gt;26</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1681.0675,-103.9815C1695.6081,-94.0957 1711.0897,-83.5701 1725.5114,-73.7651\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1727.5632,-76.6025 1733.8651,-68.0856 1723.6275,-70.8137 1727.5632,-76.6025\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AQkKpgnpY5Ha","executionInfo":{"status":"ok","timestamp":1638390278729,"user_tz":360,"elapsed":137,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"fb2b5ea2-2749-4e04-c8b7-c60cbfa7fa28"},"source":["model = DecisionTreeClassifier()\n","\n","model.fit(xtrain, ytrain)\n","\n","y_pred = model.predict(xtest)\n","\n","print(f'Accuracy Score: {metrics.accuracy_score(ytest, y_pred)}')\n","print(f'Precision Score: {metrics.precision_score(ytest, y_pred, average=\"macro\")}')\n","print(f'Recall Score: {metrics.recall_score(ytest, y_pred, average=\"macro\")}')\n","print(f'F1 Score: {metrics.f1_score(ytest, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.5346534653465347\n","Precision Score: 0.23364197530864197\n","Recall Score: 0.23888888888888887\n","F1 Score: 0.21335718545020868\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NSxVaczsq7PJ","executionInfo":{"status":"ok","timestamp":1638390284996,"user_tz":360,"elapsed":156,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"cc8b7b8e-d854-430b-9bf7-5c7b0034244c"},"source":["print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, y_pred))\n","print('Mean Squared Error:', metrics.mean_squared_error(ytest, y_pred))\n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, y_pred)))\n","print('R^2: ', metrics.r2_score(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 0.6336633663366337\n","Mean Squared Error: 1.0495049504950495\n","Root Mean Squared Error: 1.024453488692898\n","R^2:  -0.4766896551724136\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_3ioCx1mZAYy","executionInfo":{"status":"ok","timestamp":1638301766465,"user_tz":360,"elapsed":127,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"cfe26fa3-c2ea-4b13-f0b2-6b3c64e5f06c"},"source":["print(metrics.classification_report(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         3\n","           2       0.00      0.00      0.00         5\n","           3       0.33      0.15      0.21        13\n","           4       0.38      0.10      0.15        31\n","           5       0.56      0.98      0.71        49\n","\n","    accuracy                           0.52       101\n","   macro avg       0.25      0.25      0.22       101\n","weighted avg       0.43      0.52      0.42       101\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"utwTt6q2ZTqg","executionInfo":{"status":"ok","timestamp":1638301789186,"user_tz":360,"elapsed":122,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"8c43f324-74d4-47ba-fe64-5a59d7dc600e"},"source":["metrics.confusion_matrix(ytest, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  0,  1,  0,  2],\n","       [ 0,  0,  1,  1,  3],\n","       [ 0,  0,  2,  3,  8],\n","       [ 0,  1,  2,  3, 25],\n","       [ 0,  0,  0,  1, 48]])"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"xSEprvtSkdc9"},"source":["# Oversampling\n"]},{"cell_type":"code","metadata":{"id":"gUCkh6F8Zk5l"},"source":["from imblearn.over_sampling import RandomOverSampler, SMOTE\n","sm = SMOTE(sampling_strategy='minority', random_state = 2)\n","X_train_res, y_train_res = sm.fit_resample(xtrain, ytrain)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-my6_tqHCfz3"},"source":["# Linear Model"]},{"cell_type":"code","metadata":{"id":"QUsQFQ4WCb4C"},"source":["from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import RobustScaler\n","from sklearn import metrics\n","\n","regressor = LinearRegression()\n","regressor.fit(X_train_res, y_train_res);"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2_8aCxjHCmGo"},"source":["y_pred = regressor.predict(xtest)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"4HIfgKfHCnOe","executionInfo":{"status":"ok","timestamp":1638564273179,"user_tz":360,"elapsed":128,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"36172cca-5272-4b58-c728-37488055903b"},"source":["df_test = pd.DataFrame({'Actual': ytest, 'Predicted': y_pred})\n","df_test"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Predicted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>4</td>\n","      <td>2.538450</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>2.538450</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>5</td>\n","      <td>3.349222</td>\n","    </tr>\n","    <tr>\n","      <th>411</th>\n","      <td>5</td>\n","      <td>3.349222</td>\n","    </tr>\n","    <tr>\n","      <th>282</th>\n","      <td>5</td>\n","      <td>3.349222</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>4</td>\n","      <td>3.349222</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>4</td>\n","      <td>1.367072</td>\n","    </tr>\n","    <tr>\n","      <th>351</th>\n","      <td>4</td>\n","      <td>3.349222</td>\n","    </tr>\n","    <tr>\n","      <th>122</th>\n","      <td>5</td>\n","      <td>3.349222</td>\n","    </tr>\n","    <tr>\n","      <th>255</th>\n","      <td>4</td>\n","      <td>3.349222</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>101 rows Ã— 2 columns</p>\n","</div>"],"text/plain":["     Actual  Predicted\n","8         4   2.538450\n","2         5   2.538450\n","396       5   3.349222\n","411       5   3.349222\n","282       5   3.349222\n","..      ...        ...\n","76        4   3.349222\n","6         4   1.367072\n","351       4   3.349222\n","122       5   3.349222\n","255       4   3.349222\n","\n","[101 rows x 2 columns]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dH6oZBjbCwwJ","executionInfo":{"status":"ok","timestamp":1638564453978,"user_tz":360,"elapsed":138,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"6f008a12-d4aa-4306-ec6d-68c5facd1126"},"source":["print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, y_pred))\n","print('Mean Squared Error:', metrics.mean_squared_error(ytest, y_pred))\n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, y_pred)))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 1.2432944193556763\n","Mean Squared Error: 1.890055182657662\n","Root Mean Squared Error: 1.3747927780788136\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w8bzSMN1EFsh","executionInfo":{"status":"ok","timestamp":1638564686373,"user_tz":360,"elapsed":144,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"89e729c1-5080-45fd-d51c-c3ab3fb2b35b"},"source":["r2_score = regressor.score(xtest,ytest)\n","print(r2_score*100,'%')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-93.2683732787771 %\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EcmbX-y0Zv9Q","executionInfo":{"status":"ok","timestamp":1638303826191,"user_tz":360,"elapsed":116,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"1e6e95b1-585d-4a81-8373-7ee63ed07602"},"source":["model = DecisionTreeClassifier()\n","\n","model.fit(X_train_res, y_train_res)\n","\n","y_pred = model.predict(xtest)\n","\n","print(f'Accuracy Score: {metrics.accuracy_score(ytest, y_pred)}')\n","print(f'Precision Score: {metrics.precision_score(ytest, y_pred, average=\"macro\")}')\n","print(f'Recall Score: {metrics.recall_score(ytest, y_pred, average=\"macro\")}')\n","print(f'F1 Score: {metrics.f1_score(ytest, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.5346534653465347\n","Precision Score: 0.3621951219512195\n","Recall Score: 0.44483490566037737\n","F1 Score: 0.3388936988936989\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9jA20X6UaJfU","executionInfo":{"status":"ok","timestamp":1638303828915,"user_tz":360,"elapsed":125,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"4e6885b1-cbee-4c73-911f-3718d6296429"},"source":["print(metrics.classification_report(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.33      1.00      0.50         1\n","           2       0.00      0.00      0.00         5\n","           3       0.50      0.20      0.29        10\n","           4       0.42      0.16      0.23        32\n","           5       0.56      0.87      0.68        53\n","\n","    accuracy                           0.53       101\n","   macro avg       0.36      0.44      0.34       101\n","weighted avg       0.48      0.53      0.46       101\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EPxOSJAfZ794","executionInfo":{"status":"ok","timestamp":1638303832963,"user_tz":360,"elapsed":119,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"b86acf72-1ece-461a-addb-76cf4e785e20"},"source":["metrics.confusion_matrix(ytest, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  0,  0,  0,  0],\n","       [ 1,  0,  0,  0,  4],\n","       [ 0,  0,  2,  1,  7],\n","       [ 0,  0,  2,  5, 25],\n","       [ 1,  0,  0,  6, 46]])"]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","metadata":{"id":"qMfKDrBSkhFd"},"source":["# Kmeans"]},{"cell_type":"code","metadata":{"id":"OMMeP3jtaYCh"},"source":["from imblearn.over_sampling import RandomOverSampler\n","from sklearn.cluster import KMeans, SpectralClustering\n","from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\n","from sklearn import metrics\n","from sklearn.mixture import GaussianMixture\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelBinarizer, OneHotEncoder, StandardScaler\n","\n","from sklearn.preprocessing import LabelBinarizer, OneHotEncoder\n","\n","kmeans = KMeans(n_clusters=6, random_state=0)\n","kmeans.fit(xtrain)\n","\n","cluster_labels = kmeans.predict(xtrain)\n","X_train_cluster = pd.DataFrame(xtrain)\n","X_train_cluster['cluster'] = cluster_labels\n","\n","cluster_labels = kmeans.predict(xtest)\n","X_test_cluster = pd.DataFrame(xtest)\n","X_test_cluster['cluster'] = cluster_labels"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hT7xsv3RbZ4C","executionInfo":{"status":"ok","timestamp":1638302381095,"user_tz":360,"elapsed":103,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"fa6ff6f3-edb5-4f14-e3a4-94f7ab493f72"},"source":["print(X_train_res)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Dummy.Pool  Dummy.Free.Internet  ...  Business  Excalibur.Hotel...Casino\n","0             1                    1  ...         0                         0\n","1             1                    1  ...         1                         0\n","2             1                    1  ...         0                         0\n","3             1                    1  ...         0                         0\n","4             1                    1  ...         0                         0\n","..          ...                  ...  ...       ...                       ...\n","568           1                    1  ...         0                         0\n","569           1                    1  ...         1                         0\n","570           1                    1  ...         0                         0\n","571           1                    1  ...         0                         0\n","572           1                    0  ...         0                         0\n","\n","[573 rows x 6 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_ILL7qsTbdeX","executionInfo":{"status":"ok","timestamp":1638302347661,"user_tz":360,"elapsed":110,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"01186fe2-a1bf-4c63-fe7c-3e8ab50abc92"},"source":["print(xtest)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Dummy.Pool  Dummy.Free.Internet  ...  Business  Excalibur.Hotel...Casino\n","349           1                    1  ...         1                         0\n","441           1                    1  ...         0                         0\n","479           1                    1  ...         0                         0\n","324           1                    1  ...         0                         0\n","427           1                    1  ...         0                         0\n","..          ...                  ...  ...       ...                       ...\n","262           1                    1  ...         0                         0\n","251           1                    1  ...         0                         0\n","228           1                    1  ...         0                         0\n","200           1                    1  ...         0                         0\n","396           1                    1  ...         0                         0\n","\n","[101 rows x 6 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nbmE_AOabfCD","executionInfo":{"status":"ok","timestamp":1638390322700,"user_tz":360,"elapsed":171,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"94d3a9fe-e5f8-4da0-a207-488c166a05a9"},"source":["model = DecisionTreeClassifier()\n","\n","model.fit(X_train_cluster, ytrain)\n","\n","y_pred = model.predict(X_test_cluster)\n","\n","print(f'Accuracy Score: {metrics.accuracy_score(ytest, y_pred)}')\n","print(f'Precision Score: {metrics.precision_score(ytest, y_pred, average=\"macro\")}')\n","print(f'Recall Score: {metrics.recall_score(ytest, y_pred, average=\"macro\")}')\n","print(f'F1 Score: {metrics.f1_score(ytest, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.5346534653465347\n","Precision Score: 0.23364197530864197\n","Recall Score: 0.23888888888888887\n","F1 Score: 0.21335718545020868\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1-4SafSdrGwR","executionInfo":{"status":"ok","timestamp":1638390330352,"user_tz":360,"elapsed":113,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"584c9dfb-9dac-4d23-fdb6-dd946ba29883"},"source":["print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, y_pred))\n","print('Mean Squared Error:', metrics.mean_squared_error(ytest, y_pred))\n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, y_pred)))\n","print('R^2: ', metrics.r2_score(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 0.6336633663366337\n","Mean Squared Error: 1.0495049504950495\n","Root Mean Squared Error: 1.024453488692898\n","R^2:  -0.4766896551724136\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2QGODOcPb7Jv","executionInfo":{"status":"ok","timestamp":1638303904170,"user_tz":360,"elapsed":101,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"359cf252-6dd9-4694-d00f-89e04577d293"},"source":["print(metrics.classification_report(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         1\n","           2       0.00      0.00      0.00         5\n","           3       0.33      0.20      0.25        10\n","           4       0.38      0.16      0.22        32\n","           5       0.56      0.87      0.68        53\n","\n","    accuracy                           0.52       101\n","   macro avg       0.26      0.24      0.23       101\n","weighted avg       0.45      0.52      0.45       101\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"id":"li_GXoRscDkP"},"source":["X = df[['Dummy.Pool', 'Dummy.Free.Internet', 'Saturday', 'China', 'Business','Excalibur.Hotel...Casino']]\n","\n","wcss = []\n","for i in range(1, 11):\n","    kmeans = KMeans(n_clusters=i, random_state=0)\n","    kmeans.fit(X)\n","    wcss.append(kmeans.inertia_)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":621},"id":"j1ACUfZDdZUP","executionInfo":{"status":"ok","timestamp":1638302921466,"user_tz":360,"elapsed":262,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"3e501083-dd8a-4cfb-a8cd-d69d53274dc5"},"source":["plt.figure(figsize=(10, 10))\n","ax = plt.subplot(111)\n","ax.plot(range(1, 11), wcss)\n","ax.set_title('Selecting the Number of Clusters using the Elbow Method')\n","ax.set_xlabel('Clusters')\n","ax.set_ylabel('WCSS')\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"_9GdCDH_dw9S"},"source":["from sklearn.preprocessing import LabelBinarizer, OneHotEncoder\n","\n","kmeans = KMeans(n_clusters=6, random_state=0)\n","kmeans.fit(xtrain)\n","\n","cluster_labels = kmeans.predict(X_train_res)\n","X_train_cluster = pd.DataFrame(X_train_res)\n","X_train_cluster['cluster'] = cluster_labels\n","\n","cluster_labels = kmeans.predict(xtest)\n","X_test_cluster = pd.DataFrame(xtest)\n","X_test_cluster['cluster'] = cluster_labels"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DJJ0eYR0eIJz","executionInfo":{"status":"ok","timestamp":1638303066918,"user_tz":360,"elapsed":115,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"9dd50d59-631b-4279-f6c8-45483aa702d4"},"source":["model = DecisionTreeClassifier()\n","\n","model.fit(X_train_cluster, y_train_res)\n","\n","y_pred = model.predict(X_test_cluster)\n","\n","print(f'Accuracy Score: {metrics.accuracy_score(ytest, y_pred)}')\n","print(f'Precision Score: {metrics.precision_score(ytest, y_pred, average=\"macro\")}')\n","print(f'Recall Score: {metrics.recall_score(ytest, y_pred, average=\"macro\")}')\n","print(f'F1 Score: {metrics.f1_score(ytest, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.44554455445544555\n","Precision Score: 0.21242236024844718\n","Recall Score: 0.22024722932651325\n","F1 Score: 0.2038076936763816\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u3F6xo-teQGy","executionInfo":{"status":"ok","timestamp":1638303085025,"user_tz":360,"elapsed":171,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"db7b9b7f-0676-4aeb-bd3e-01d2f6a056ba"},"source":["print(metrics.classification_report(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         5\n","           2       0.00      0.00      0.00         4\n","           3       0.20      0.08      0.12        12\n","           4       0.35      0.24      0.28        34\n","           5       0.51      0.78      0.62        46\n","\n","    accuracy                           0.45       101\n","   macro avg       0.21      0.22      0.20       101\n","weighted avg       0.38      0.45      0.39       101\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"id":"1vgqTXbDfDfq"},"source":["def model_validation(ytrue, y_pred):\n","    '''Definition for computing and printing a series of Classification metric scores'''\n","    print(f'Accuracy Score: {metrics.accuracy_score(ytrue, y_pred)}')\n","    print(f'Precision Score: {metrics.precision_score(ytrue, y_pred, average=\"macro\")}')\n","    print(f'Recall Score: {metrics.recall_score(ytrue, y_pred, average=\"macro\")}')\n","    print(f'F1 Score: {metrics.f1_score(ytrue, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8YAJZSkikn11"},"source":["# RandomForest"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U-qx9BKgegfb","executionInfo":{"status":"ok","timestamp":1638390192092,"user_tz":360,"elapsed":282,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"60b1aeb3-2a94-4232-86ef-1ba849ca5010"},"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","random_forest = RandomForestClassifier(max_features = 5, max_samples = 0.75, random_state=4)\n","random_forest.fit(X_train_res, y_train_res)\n","\n","y_pred = random_forest.predict(xtest)\n","\n","model_validation(ytest, y_pred)\n","\n","random_forest.feature_names_in_"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.5247524752475248\n","Precision Score: 0.22864197530864194\n","Recall Score: 0.2333333333333333\n","F1 Score: 0.20702234382124943\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"execute_result","data":{"text/plain":["array(['Dummy.Pool', 'Dummy.Free.Internet', 'Saturday', 'China',\n","       'Business', 'Excalibur.Hotel...Casino'], dtype=object)"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T2DGaFWXqmzK","executionInfo":{"status":"ok","timestamp":1638390204364,"user_tz":360,"elapsed":143,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"d3f06aef-dc5d-45e1-98ce-a62ff8c8f757"},"source":["print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, y_pred))\n","print('Mean Squared Error:', metrics.mean_squared_error(ytest, y_pred))\n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, y_pred)))\n","print('R^2: ', metrics.r2_score(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 0.6831683168316832\n","Mean Squared Error: 1.2574257425742574\n","Root Mean Squared Error: 1.121349964361821\n","R^2:  -0.7692413793103445\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vJW_z8F4hmvz","executionInfo":{"status":"ok","timestamp":1638303960034,"user_tz":360,"elapsed":108,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"18cec956-324a-4199-de13-6240ea9e5ffc"},"source":["print(metrics.classification_report(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         3\n","           2       0.00      0.00      0.00         9\n","           3       1.00      0.08      0.14        13\n","           4       0.44      0.24      0.31        29\n","           5       0.56      0.94      0.70        47\n","\n","    accuracy                           0.51       101\n","   macro avg       0.40      0.25      0.23       101\n","weighted avg       0.52      0.51      0.44       101\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7fC7TbUOhqYu","executionInfo":{"status":"ok","timestamp":1638303990327,"user_tz":360,"elapsed":135,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"b929cc75-b993-4c06-da06-4e4980140251"},"source":["metrics.confusion_matrix(ytest, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  0,  2,  0],\n","       [ 3,  0,  0,  1,  5],\n","       [ 1,  0,  1,  3,  8],\n","       [ 0,  1,  0,  7, 21],\n","       [ 0,  0,  0,  3, 44]])"]},"metadata":{},"execution_count":99}]},{"cell_type":"markdown","metadata":{"id":"bk_hTLpLksj7"},"source":["# Alternative Data"]},{"cell_type":"markdown","metadata":{"id":"-5AMgPvCksil"},"source":[""]},{"cell_type":"code","metadata":{"id":"sCyZciOzfXyj"},"source":["xtrain, xtest, ytrain, ytest = train_test_split(df[['Dummy.Pool','Dummy.Free.Internet','Business','Families','China','Scotland','Spain','Dec.Feb','Excalibur.Hotel...Casino','Hilton.Grand.Vacations.at.the.Flamingo','Paris.Las.Vegas','The.Westin.las.Vegas.Hotel.Casino...Spa','Treasure.Island..TI.Hotel...Casino','December','February','January','Friday','Saturday']], df['Score'],train_size=0.8)\n","\n","# Initialize our decision tree object\n","classification_tree = DecisionTreeClassifier()\n","\n","# Train our decision tree (tree induction + pruning)\n","classification_tree = classification_tree.fit(xtrain, ytrain)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-POzs51egilr"},"source":["from imblearn.over_sampling import RandomOverSampler, SMOTE\n","sm = SMOTE(sampling_strategy='minority', random_state = 2)\n","X_train_res, y_train_res = sm.fit_resample(xtrain, ytrain)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8iIq_ztwgoRi","executionInfo":{"status":"ok","timestamp":1638303753918,"user_tz":360,"elapsed":120,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"2d022008-ef4f-4806-d8c8-b6019a52c76a"},"source":["model = DecisionTreeClassifier()\n","\n","model.fit(X_train_res, y_train_res)\n","\n","y_pred = model.predict(xtest)\n","\n","print(f'Accuracy Score: {metrics.accuracy_score(ytest, y_pred)}')\n","print(f'Precision Score: {metrics.precision_score(ytest, y_pred, average=\"macro\")}')\n","print(f'Recall Score: {metrics.recall_score(ytest, y_pred, average=\"macro\")}')\n","print(f'F1 Score: {metrics.f1_score(ytest, y_pred, average=\"macro\")}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.36633663366336633\n","Precision Score: 0.2131149825783972\n","Recall Score: 0.3554285714285714\n","F1 Score: 0.20095238095238094\n"]}]},{"cell_type":"markdown","metadata":{"id":"HE6UCE7FkwtV"},"source":["# Adaboost Original Data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"Bo5XkF8ugxAa","executionInfo":{"status":"error","timestamp":1638390175958,"user_tz":360,"elapsed":129,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"f21c56cf-3449-4154-a5be-9499e0e8c80e"},"source":["#m = np.int64(np.sqrt(X.shape[1]))\n","\n","adaboost = AdaBoostClassifier(base_estimator=RandomForestClassifier(max_features=5, max_samples=.75, random_state=4),\n","                              learning_rate=.1, n_estimators=25, random_state=1)\n","\n","adaboost.fit(xtrain, ytrain)\n","\n","y_pred = adaboost.predict(xtest)\n","\n","model_validation(ytest, y_pred)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-23-d957edf774f3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#m = np.int64(np.sqrt(X.shape[1]))\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m adaboost = AdaBoostClassifier(base_estimator=RandomForestClassifier(max_features=5, max_samples=.75, random_state=4),\n\u001b[0m\u001b[1;32m      4\u001b[0m                               learning_rate=.1, n_estimators=25, random_state=1)\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'AdaBoostClassifier' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QM3Df6y3ikTD","executionInfo":{"status":"ok","timestamp":1638304318699,"user_tz":360,"elapsed":125,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"1541b41b-8404-4fa3-85bd-a9525cc2d0ef"},"source":["print(metrics.classification_report(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         3\n","           2       0.00      0.00      0.00         9\n","           3       1.00      0.08      0.14        13\n","           4       0.35      0.24      0.29        29\n","           5       0.56      0.94      0.70        47\n","\n","    accuracy                           0.51       101\n","   macro avg       0.38      0.25      0.23       101\n","weighted avg       0.49      0.51      0.43       101\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C8omCo5Bio8D","executionInfo":{"status":"ok","timestamp":1638304352806,"user_tz":360,"elapsed":186,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"dc725a1d-18cd-456c-fda0-3fd8cf518735"},"source":["metrics.confusion_matrix(ytest, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  0,  2,  0],\n","       [ 0,  0,  0,  4,  5],\n","       [ 0,  0,  1,  4,  8],\n","       [ 0,  1,  0,  7, 21],\n","       [ 0,  0,  0,  3, 44]])"]},"metadata":{},"execution_count":108}]},{"cell_type":"markdown","metadata":{"id":"JNWKshttlYC1"},"source":["# Logistic Regression"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TaJIsG8_lABL","executionInfo":{"status":"ok","timestamp":1638390135046,"user_tz":360,"elapsed":137,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"50183424-70cc-46dc-c073-017458cd6264"},"source":["from sklearn.linear_model import LogisticRegression\n","fit_intercept = False\n","lr = LogisticRegression()\n","lr.fit(X_train_res, y_train_res)\n","predictions = lr.predict(xtest)\n","\n","#print(f'Accuracy Score: {metrics.accuracy_score(ytest, predictions)}')\n","#print(f'Precision Score: {metrics.precision_score(ytest, predictions, average=\"macro\")}')\n","#print(f'Recall Score: {metrics.recall_score(ytest, predictions, average=\"macro\")}')\n","#print(f'F1 Score: {metrics.f1_score(ytest, predictions, average=\"macro\")}')\n","\n","print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, y_pred))\n","print('Mean Squared Error:', metrics.mean_squared_error(ytest, y_pred))\n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, y_pred)))\n","print('R^2: ', metrics.r2_score(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 1.1238007227996463\n","Mean Squared Error: 1.6661872788677667\n","Root Mean Squared Error: 1.2908087692868246\n","R^2:  -1.3443829561007012\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1D4XKBNtlyH0","executionInfo":{"status":"ok","timestamp":1638389025599,"user_tz":360,"elapsed":106,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"0b3d68ba-3899-4873-8721-61ebeb2c38b9"},"source":["print(metrics.classification_report(ytest, predictions))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.00      0.00      0.00         1\n","           2       0.00      0.00      0.00         2\n","           3       0.00      0.00      0.00        14\n","           4       0.67      0.28      0.39        36\n","           5       0.54      0.92      0.68        48\n","\n","    accuracy                           0.53       101\n","   macro avg       0.24      0.24      0.21       101\n","weighted avg       0.50      0.53      0.46       101\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1308: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2TFNNTzwmTi8","executionInfo":{"status":"ok","timestamp":1638389216492,"user_tz":360,"elapsed":395,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"633a87d7-c9ca-41ef-e084-efbbafaa9200"},"source":["from sklearn.linear_model import RidgeCV\n","cv_regressor = RidgeCV(alphas=[5e-4, 1e-3, 5e-3, 1e-2, 5e-2, 1e-1, 5e-1, 1] , cv=5)\n","cv_regressor.fit(X_train_res, y_train_res)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RidgeCV(alphas=array([5.e-04, 1.e-03, 5.e-03, 1.e-02, 5.e-02, 1.e-01, 5.e-01, 1.e+00]),\n","        cv=5)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"vK2h-2Hhm30T"},"source":["y_pred = cv_regressor.predict(xtest)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z61as6yym7aL","executionInfo":{"status":"ok","timestamp":1638389303612,"user_tz":360,"elapsed":113,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"e10c8088-55c2-41f5-bd9c-1d0243704032"},"source":["print(f'Explained Variance Score: {metrics.explained_variance_score(ytest, y_pred)}')\n","print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, y_pred))\n","print('Mean Squared Error:', metrics.mean_squared_error(ytest, y_pred))\n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, y_pred)))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Explained Variance Score: -0.05939401888879159\n","Mean Absolute Error: 1.1037902926409093\n","Mean Squared Error: 1.60993438843172\n","Root Mean Squared Error: 1.2688318992016714\n"]}]},{"cell_type":"markdown","metadata":{"id":"WJJuD3dXpFZF"},"source":["# PCA"]},{"cell_type":"code","metadata":{"id":"LIhOFSEQpI0S"},"source":["from sklearn.decomposition import PCA\n","\n","pca = PCA(n_components=0.95)\n","\n","# Fit our PCA\n","pca_fit = pca.fit(X_train_res) \n","\n","# Compute the components on the training data and put into a DataFrame (not strictly needed)\n","principalComponents = pca_fit.transform(X_train_res)\n","pcaDF = pd.DataFrame(data = principalComponents,\n","                     columns = [f'principal component {i+1}' for i in range(principalComponents.shape[1])])\n","\n","# Compute the components on the testing data\n","pcaDF_test = pca_fit.transform(xtest)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rg2aprvgpecB","executionInfo":{"status":"ok","timestamp":1638389966433,"user_tz":360,"elapsed":136,"user":{"displayName":"Christopher Barua","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgqgPbaVwdmu1AIbU-LnyfV_xr-2X15O19IxAeo=s64","userId":"14017824988124216679"}},"outputId":"d68dac17-1e26-4dc7-b5c8-3011c1e457fe"},"source":["from sklearn.linear_model import LinearRegression, SGDRegressor, LogisticRegression\n","\n","regressor = SGDRegressor()\n","regressor.fit(pcaDF, y_train_res);\n","\n","y_pred = regressor.predict(pcaDF_test)\n","\n","print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, y_pred))\n","print('Mean Squared Error:', metrics.mean_squared_error(ytest, y_pred))\n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, y_pred)))\n","print('R^2: ', metrics.r2_score(ytest, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 1.1238007227996463\n","Mean Squared Error: 1.6661872788677667\n","Root Mean Squared Error: 1.2908087692868246\n","R^2:  -1.3443829561007012\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:446: UserWarning: X does not have valid feature names, but SGDRegressor was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]}]},{"cell_type":"code","metadata":{"id":"t2az19HTpwIK"},"source":[""],"execution_count":null,"outputs":[]}]}